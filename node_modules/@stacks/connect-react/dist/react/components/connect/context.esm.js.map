{"version":3,"file":"context.esm.js","sources":["../../../../src/react/components/connect/context.tsx"],"sourcesContent":["import React, { useReducer, createContext } from 'react';\nimport { AuthOptions, FinishedAuthData, UserSession } from '@stacks/connect';\n\nenum States {\n  UPDATE_AUTH_OPTIONS = 'data/update-auth-options',\n}\n\ntype Action = { type: string; payload?: any };\n\ntype Dispatch = (action: Action) => void;\n\ntype State = {\n  isOpen: boolean;\n  isAuthenticating: boolean;\n  authData?: FinishedAuthData;\n  authOptions: AuthOptions;\n  userSession?: UserSession;\n};\n\nconst initialState: State = {\n  isOpen: false,\n  isAuthenticating: false,\n  authData: undefined,\n  userSession: undefined,\n  authOptions: {\n    redirectTo: '',\n    manifestPath: '',\n    onFinish: () => null,\n    authOrigin: undefined,\n    sendToSignIn: false,\n    appDetails: {\n      name: '',\n      icon: '',\n    },\n  },\n};\n\nconst connectReducer = (state: State, { type, payload }: { type: string; payload?: any }) => {\n  switch (type) {\n    case States.UPDATE_AUTH_OPTIONS: {\n      return {\n        ...state,\n        authOptions: {\n          ...state.authOptions,\n          ...payload,\n        },\n      };\n    }\n\n    default: {\n      throw new Error(`Unhandled action type: ${type}`);\n    }\n  }\n};\n\nconst ConnectContext = createContext<State>(initialState);\n\nconst ConnectDispatchContext = createContext<Dispatch | undefined>(undefined);\n\nconst ConnectProvider = ({\n  authOptions,\n  children,\n}: {\n  authOptions: AuthOptions;\n  children: any;\n}) => {\n  const [state, dispatch] = useReducer(connectReducer, initialState);\n\n  return (\n    <ConnectContext.Provider value={{ ...state, authOptions }}>\n      <ConnectDispatchContext.Provider value={dispatch}>{children}</ConnectDispatchContext.Provider>\n    </ConnectContext.Provider>\n  );\n};\n\nexport {\n  initialState,\n  connectReducer,\n  ConnectContext,\n  ConnectDispatchContext,\n  ConnectProvider,\n  States,\n};\n"],"names":["States","States2","initialState","isOpen","isAuthenticating","authData","userSession","authOptions","redirectTo","manifestPath","onFinish","authOrigin","sendToSignIn","appDetails","name","icon","connectReducer","state","type","payload","UPDATE_AUTH_OPTIONS","Error","ConnectContext","createContext","ConnectDispatchContext","ConnectProvider","children","useReducer","dispatch","Provider","value"],"mappings":";;;IAGKA;AAAL,WAAKC,SAAL;mCACwB;AAAA,GADnBD;IAgBCE,eAAsB;EAC1BC,QAAQ;EACRC,kBAAkB;EAClBC,UAAU;EACVC,aAAa;EACbC,aAAa;IACXC,YAAY;IACZC,cAAc;IACdC,UAAU;MAAA,OAAM;;IAChBC,YAAY;IACZC,cAAc;IACdC,YAAY;MACVC,MAAM;MACNC,MAAM;;;AAAA;IAKNC,iBAAiB,SAAjBA,eAAkBC,aAAqE;EAAA,IAArDC,YAAAA;IAAMC,eAAAA;UACpCD;SACDlB,OAAOoB;MAAqB;4BAE1BH;UACHV,0BACKU,MAAMV,aACNY;;;;MAKA;cACD,IAAIE,kCAAgCH;;;AAAA;IAK1CI,8BAAiBC,cAAqBrB;IAEtCsB,sCAAyBD,cAAoC;IAE7DE,kBAAkB,SAAlBA,uBAMA;EAAA,IALJlB,oBAAAA;IACAmB,iBAAAA;oBAK0BC,WAAWX,gBAAgBd;IAA9Ce;IAAOW;4CAGXN,eAAeO,UAAhB;IAAyBC,oBAAYb;MAAOV,aAAAA;;wCACzCiB,uBAAuBK,UAAxB;IAAiCC,OAAOF;KAAWF;AAAA;;;;"}