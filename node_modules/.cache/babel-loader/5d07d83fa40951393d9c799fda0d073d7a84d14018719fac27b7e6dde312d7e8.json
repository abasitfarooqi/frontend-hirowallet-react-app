{"ast":null,"code":"import { asyncToGenerator as _asyncToGenerator, regeneratorRuntime as _regeneratorRuntime, extends as _extends, objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport { AppConfig, UserSession } from '@stacks/auth';\nimport { SECP256K1Client, createUnsecuredToken, TokenSigner } from 'jsontokens';\nimport { getStacksProvider } from '../utils.esm.js';\nimport { bytesToHex, hexToBytes } from '@stacks/common';\nimport { StacksTestnet } from '@stacks/network';\nimport { ChainID, serializeCV, serializePostCondition, deserializeTransaction } from '@stacks/transactions';\nimport { TransactionTypes } from '../types/transactions.esm.js';\nvar _excluded = [\"functionArgs\", \"appDetails\", \"userSession\"],\n  _excluded2 = [\"appDetails\", \"userSession\"],\n  _excluded3 = [\"amount\", \"appDetails\", \"userSession\"];\nvar getUserSession = function getUserSession(_userSession) {\n  var userSession = _userSession;\n  if (!userSession) {\n    var appConfig = new AppConfig([\"store_write\"], document.location.href);\n    userSession = new UserSession({\n      appConfig: appConfig\n    });\n  }\n  return userSession;\n};\nfunction hasAppPrivateKey(userSession) {\n  try {\n    var session = getUserSession(userSession).loadUserData();\n    return session.appPrivateKey;\n  } catch (e) {\n    return false;\n  }\n}\nvar getKeys = function getKeys(_userSession) {\n  var userSession = getUserSession(_userSession);\n  var privateKey = userSession.loadUserData().appPrivateKey;\n  var publicKey = SECP256K1Client.derivePublicKey(privateKey);\n  return {\n    privateKey: privateKey,\n    publicKey: publicKey\n  };\n};\nfunction getStxAddress(options) {\n  var _userSession$loadUser, _chainIdToKey;\n  var stxAddress = options.stxAddress,\n    userSession = options.userSession,\n    network = options.network;\n  if (stxAddress) return stxAddress;\n  if (!userSession || !network) return void 0;\n  var stxAddresses = userSession == null ? void 0 : (_userSession$loadUser = userSession.loadUserData().profile) == null ? void 0 : _userSession$loadUser.stxAddress;\n  var chainIdToKey = (_chainIdToKey = {}, _chainIdToKey[ChainID.Mainnet] = \"mainnet\", _chainIdToKey[ChainID.Testnet] = \"testnet\", _chainIdToKey);\n  var address = stxAddresses == null ? void 0 : stxAddresses[chainIdToKey[network.chainId]];\n  return address;\n}\nfunction getDefaults(options) {\n  var network = options.network || new StacksTestnet();\n  var userSession = getUserSession(options.userSession);\n  var defaults = _extends({}, options, {\n    network: network,\n    userSession: userSession\n  });\n  return _extends({\n    stxAddress: getStxAddress(defaults)\n  }, defaults);\n}\nfunction encodePostConditions(postConditions) {\n  return postConditions.map(function (pc) {\n    return bytesToHex(serializePostCondition(pc));\n  });\n}\nfunction signPayload(_x, _x2) {\n  return _signPayload.apply(this, arguments);\n}\nfunction _signPayload() {\n  _signPayload = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(payload, privateKey) {\n    var postConditions, tokenSigner;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          postConditions = payload.postConditions;\n          if (postConditions && typeof postConditions[0] !== \"string\") {\n            postConditions = encodePostConditions(postConditions);\n          }\n          tokenSigner = new TokenSigner(\"ES256k\", privateKey);\n          return _context5.abrupt(\"return\", tokenSigner.signAsync(_extends({}, payload, {\n            postConditions: postConditions\n          })));\n        case 4:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5);\n  }));\n  return _signPayload.apply(this, arguments);\n}\nfunction createUnsignedTransactionPayload(payload) {\n  var postConditions = payload.postConditions;\n  if (postConditions && typeof postConditions[0] !== \"string\") {\n    postConditions = encodePostConditions(postConditions);\n  }\n  return createUnsecuredToken(_extends({}, payload, {\n    postConditions: postConditions\n  }));\n}\nvar openTransactionPopup = /*#__PURE__*/function () {\n  var _ref2 = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref) {\n    var token, options, provider, txResponse, txRaw, txBytes, stacksTransaction;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          token = _ref.token, options = _ref.options;\n          provider = getStacksProvider();\n          if (provider) {\n            _context.next = 4;\n            break;\n          }\n          throw new Error(\"Hiro Wallet not installed\");\n        case 4:\n          _context.prev = 4;\n          _context.next = 7;\n          return provider.transactionRequest(token);\n        case 7:\n          txResponse = _context.sent;\n          txRaw = txResponse.txRaw;\n          txBytes = hexToBytes(txRaw.replace(/^0x/, \"\"));\n          stacksTransaction = deserializeTransaction(txBytes);\n          if (!(\"sponsored\" in options && options.sponsored)) {\n            _context.next = 14;\n            break;\n          }\n          options.onFinish == null ? void 0 : options.onFinish(_extends({}, txResponse, {\n            stacksTransaction: stacksTransaction\n          }));\n          return _context.abrupt(\"return\");\n        case 14:\n          options.onFinish == null ? void 0 : options.onFinish(_extends({}, txResponse, {\n            stacksTransaction: stacksTransaction\n          }));\n          _context.next = 21;\n          break;\n        case 17:\n          _context.prev = 17;\n          _context.t0 = _context[\"catch\"](4);\n          console.error(\"[Connect] Error during transaction request\", _context.t0);\n          options.onCancel == null ? void 0 : options.onCancel();\n        case 21:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[4, 17]]);\n  }));\n  return function openTransactionPopup(_x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar makeContractCallToken = /*#__PURE__*/function () {\n  var _ref3 = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(options) {\n    var functionArgs, appDetails, userSession, _options, args, _getKeys, privateKey, publicKey, payload2, payload;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          functionArgs = options.functionArgs, appDetails = options.appDetails, userSession = options.userSession, _options = _objectWithoutPropertiesLoose(options, _excluded);\n          args = functionArgs.map(function (arg) {\n            if (typeof arg === \"string\") {\n              return arg;\n            }\n            return bytesToHex(serializeCV(arg));\n          });\n          if (!hasAppPrivateKey(userSession)) {\n            _context2.next = 7;\n            break;\n          }\n          _getKeys = getKeys(userSession), privateKey = _getKeys.privateKey, publicKey = _getKeys.publicKey;\n          payload2 = _extends({}, _options, {\n            functionArgs: args,\n            txType: TransactionTypes.ContractCall,\n            publicKey: publicKey\n          });\n          if (appDetails) payload2.appDetails = appDetails;\n          return _context2.abrupt(\"return\", signPayload(payload2, privateKey));\n        case 7:\n          payload = _extends({}, _options, {\n            functionArgs: args,\n            txType: TransactionTypes.ContractCall\n          });\n          if (appDetails) payload.appDetails = appDetails;\n          return _context2.abrupt(\"return\", createUnsignedTransactionPayload(payload));\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function makeContractCallToken(_x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nvar makeContractDeployToken = /*#__PURE__*/function () {\n  var _ref4 = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(options) {\n    var appDetails, userSession, _options, _getKeys2, privateKey, publicKey, payload2, payload;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          appDetails = options.appDetails, userSession = options.userSession, _options = _objectWithoutPropertiesLoose(options, _excluded2);\n          if (!hasAppPrivateKey(userSession)) {\n            _context3.next = 6;\n            break;\n          }\n          _getKeys2 = getKeys(userSession), privateKey = _getKeys2.privateKey, publicKey = _getKeys2.publicKey;\n          payload2 = _extends({}, _options, {\n            publicKey: publicKey,\n            txType: TransactionTypes.ContractDeploy\n          });\n          if (appDetails) payload2.appDetails = appDetails;\n          return _context3.abrupt(\"return\", signPayload(payload2, privateKey));\n        case 6:\n          payload = _extends({}, _options, {\n            txType: TransactionTypes.ContractDeploy\n          });\n          if (appDetails) payload.appDetails = appDetails;\n          return _context3.abrupt(\"return\", createUnsignedTransactionPayload(payload));\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return function makeContractDeployToken(_x5) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nvar makeSTXTransferToken = /*#__PURE__*/function () {\n  var _ref5 = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(options) {\n    var amount, appDetails, userSession, _options, _getKeys3, privateKey, publicKey, payload2, payload;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          amount = options.amount, appDetails = options.appDetails, userSession = options.userSession, _options = _objectWithoutPropertiesLoose(options, _excluded3);\n          if (!hasAppPrivateKey(userSession)) {\n            _context4.next = 6;\n            break;\n          }\n          _getKeys3 = getKeys(userSession), privateKey = _getKeys3.privateKey, publicKey = _getKeys3.publicKey;\n          payload2 = _extends({}, _options, {\n            amount: amount.toString(10),\n            publicKey: publicKey,\n            txType: TransactionTypes.STXTransfer\n          });\n          if (appDetails) payload2.appDetails = appDetails;\n          return _context4.abrupt(\"return\", signPayload(payload2, privateKey));\n        case 6:\n          payload = _extends({}, _options, {\n            amount: amount.toString(10),\n            txType: TransactionTypes.STXTransfer\n          });\n          if (appDetails) payload.appDetails = appDetails;\n          return _context4.abrupt(\"return\", createUnsignedTransactionPayload(payload));\n        case 9:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return function makeSTXTransferToken(_x6) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nfunction generateTokenAndOpenPopup(_x7, _x8) {\n  return _generateTokenAndOpenPopup.apply(this, arguments);\n}\nfunction _generateTokenAndOpenPopup() {\n  _generateTokenAndOpenPopup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(options, makeTokenFn) {\n    var token;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return makeTokenFn(_extends({}, getDefaults(options), options));\n        case 2:\n          token = _context6.sent;\n          return _context6.abrupt(\"return\", openTransactionPopup({\n            token: token,\n            options: options\n          }));\n        case 4:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6);\n  }));\n  return _generateTokenAndOpenPopup.apply(this, arguments);\n}\nfunction openContractCall(options) {\n  return generateTokenAndOpenPopup(options, makeContractCallToken);\n}\nfunction openContractDeploy(options) {\n  return generateTokenAndOpenPopup(options, makeContractDeployToken);\n}\nfunction openSTXTransfer(options) {\n  return generateTokenAndOpenPopup(options, makeSTXTransferToken);\n}\nexport { getKeys, getStxAddress, getUserSession, hasAppPrivateKey, makeContractCallToken, makeContractDeployToken, makeSTXTransferToken, openContractCall, openContractDeploy, openSTXTransfer };","map":{"version":3,"names":["getUserSession","_userSession","userSession","appConfig","AppConfig","document","location","href","UserSession","session","loadUserData","appPrivateKey","e","getKeys","privateKey","publicKey","SECP256K1Client","derivePublicKey","options","_userSession$loadUser","_chainIdToKey","stxAddress","network","stxAddresses","profile","chainIdToKey","ChainID","Mainnet","Testnet","address","chainId","getDefaults","StacksTestnet","defaults","_extends","getStxAddress","encodePostConditions","postConditions","map","pc","bytesToHex","serializePostCondition","_callee5","payload","tokenSigner","TokenSigner","signAsync","createUnsignedTransactionPayload","createUnsecuredToken","openTransactionPopup","_callee","_ref","token","provider","txResponse","txRaw","txBytes","stacksTransaction","_regeneratorRuntime","wrap","_callee$","_context","prev","next","getStacksProvider","Error","transactionRequest","sent","hexToBytes","replace","deserializeTransaction","sponsored","onFinish","error","t0","onCancel","_x3","makeContractCallToken","_callee2","functionArgs","appDetails","_options","_objectWithoutPropertiesLoose","_excluded","args","arg","serializeCV","hasAppPrivateKey","_getKeys","payload2","txType","TransactionTypes","ContractCall","signPayload","_x4","makeContractDeployToken","_callee3","_excluded2","_getKeys2","ContractDeploy","_x5","makeSTXTransferToken","_callee4","amount","_excluded3","_getKeys3","toString","STXTransfer","_x6","_callee6","makeTokenFn","_context6","generateTokenAndOpenPopup"],"sources":["C:\\Users\\abasi\\Desktop\\web3-apps\\react-cra\\node_modules\\@stacks\\connect-react\\node_modules\\@stacks\\connect\\src\\transactions\\index.ts"],"sourcesContent":["import { AppConfig, UserSession } from '@stacks/auth';\nimport { bytesToHex, hexToBytes } from '@stacks/common';\nimport { StacksTestnet } from '@stacks/network';\nimport {\n  ChainID,\n  deserializeTransaction,\n  PostCondition,\n  serializeCV,\n  serializePostCondition,\n} from '@stacks/transactions';\nimport { createUnsecuredToken, Json, SECP256K1Client, TokenSigner } from 'jsontokens';\nimport {\n  ContractCallOptions,\n  ContractCallPayload,\n  ContractCallRegularOptions,\n  ContractCallSponsoredOptions,\n  ContractDeployOptions,\n  ContractDeployPayload,\n  ContractDeployRegularOptions,\n  ContractDeploySponsoredOptions,\n  FinishedTxPayload,\n  SponsoredFinishedTxPayload,\n  STXTransferOptions,\n  STXTransferPayload,\n  STXTransferRegularOptions,\n  STXTransferSponsoredOptions,\n  TransactionOptions,\n  TransactionPayload,\n  TransactionPopup,\n  TransactionTypes,\n} from '../types/transactions';\nimport { getStacksProvider } from '../utils';\n\n// TODO extract out of transactions\nexport const getUserSession = (_userSession?: UserSession) => {\n  let userSession = _userSession;\n\n  if (!userSession) {\n    const appConfig = new AppConfig(['store_write'], document.location.href);\n    userSession = new UserSession({ appConfig });\n  }\n  return userSession;\n};\n\nexport function hasAppPrivateKey(userSession?: UserSession) {\n  try {\n    const session = getUserSession(userSession).loadUserData();\n    return session.appPrivateKey;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport const getKeys = (_userSession?: UserSession) => {\n  const userSession = getUserSession(_userSession);\n  const privateKey = userSession.loadUserData().appPrivateKey;\n  const publicKey = SECP256K1Client.derivePublicKey(privateKey);\n\n  return { privateKey, publicKey };\n};\n\n// TODO extract out of transactions\nexport function getStxAddress(options: TransactionOptions) {\n  const { stxAddress, userSession, network } = options;\n\n  if (stxAddress) return stxAddress;\n  if (!userSession || !network) return undefined;\n  const stxAddresses = userSession?.loadUserData().profile?.stxAddress;\n  const chainIdToKey = {\n    [ChainID.Mainnet]: 'mainnet',\n    [ChainID.Testnet]: 'testnet',\n  };\n  const address: string | undefined = stxAddresses?.[chainIdToKey[network.chainId]];\n  return address;\n}\n\nfunction getDefaults(options: TransactionOptions) {\n  const network = options.network || new StacksTestnet();\n\n  const userSession = getUserSession(options.userSession);\n  const defaults: TransactionOptions = {\n    ...options,\n    network,\n    userSession,\n  };\n\n  return {\n    stxAddress: getStxAddress(defaults),\n    ...defaults,\n  };\n}\n\nfunction encodePostConditions(postConditions: PostCondition[]) {\n  return postConditions.map(pc => bytesToHex(serializePostCondition(pc)));\n}\n\n// eslint-disable-next-line @typescript-eslint/require-await\nasync function signPayload(payload: TransactionPayload, privateKey: string) {\n  let { postConditions } = payload;\n  if (postConditions && typeof postConditions[0] !== 'string') {\n    postConditions = encodePostConditions(postConditions as PostCondition[]);\n  }\n  const tokenSigner = new TokenSigner('ES256k', privateKey);\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n  return tokenSigner.signAsync({ ...payload, postConditions } as any);\n}\n\nfunction createUnsignedTransactionPayload(payload: Partial<TransactionPayload>) {\n  let { postConditions } = payload;\n  if (postConditions && typeof postConditions[0] !== 'string') {\n    postConditions = encodePostConditions(postConditions as PostCondition[]);\n  }\n  return createUnsecuredToken({ ...payload, postConditions } as unknown as Json);\n}\n\nconst openTransactionPopup = async ({ token, options }: TransactionPopup) => {\n  const provider = getStacksProvider();\n  if (!provider) {\n    throw new Error('Hiro Wallet not installed');\n  }\n\n  try {\n    const txResponse = await provider.transactionRequest(token);\n    const { txRaw } = txResponse;\n    const txBytes = hexToBytes(txRaw.replace(/^0x/, ''));\n    const stacksTransaction = deserializeTransaction(txBytes);\n\n    if ('sponsored' in options && options.sponsored) {\n      options.onFinish?.({\n        ...(txResponse as SponsoredFinishedTxPayload),\n        stacksTransaction,\n      });\n      return;\n    }\n    options.onFinish?.({\n      ...(txResponse as FinishedTxPayload),\n      stacksTransaction,\n    });\n  } catch (error) {\n    console.error('[Connect] Error during transaction request', error);\n    options.onCancel?.();\n  }\n};\n\n// eslint-disable-next-line @typescript-eslint/require-await\nexport const makeContractCallToken = async (options: ContractCallOptions) => {\n  const { functionArgs, appDetails, userSession, ..._options } = options;\n\n  const args: string[] = functionArgs.map(arg => {\n    if (typeof arg === 'string') {\n      return arg;\n    }\n    return bytesToHex(serializeCV(arg));\n  });\n  if (hasAppPrivateKey(userSession)) {\n    const { privateKey, publicKey } = getKeys(userSession);\n    const payload: ContractCallPayload = {\n      ..._options,\n      functionArgs: args,\n      txType: TransactionTypes.ContractCall,\n      publicKey,\n    };\n    if (appDetails) payload.appDetails = appDetails;\n    return signPayload(payload, privateKey);\n  }\n  const payload: Partial<ContractCallPayload> = {\n    ..._options,\n    functionArgs: args,\n    txType: TransactionTypes.ContractCall,\n  };\n  if (appDetails) payload.appDetails = appDetails;\n  return createUnsignedTransactionPayload(payload);\n};\n\n// eslint-disable-next-line @typescript-eslint/require-await\nexport const makeContractDeployToken = async (options: ContractDeployOptions) => {\n  const { appDetails, userSession, ..._options } = options;\n  if (hasAppPrivateKey(userSession)) {\n    const { privateKey, publicKey } = getKeys(userSession);\n    const payload: ContractDeployPayload = {\n      ..._options,\n      publicKey,\n      txType: TransactionTypes.ContractDeploy,\n    };\n    if (appDetails) payload.appDetails = appDetails;\n    return signPayload(payload, privateKey);\n  }\n\n  const payload: Partial<ContractDeployPayload> = {\n    ..._options,\n    txType: TransactionTypes.ContractDeploy,\n  };\n  if (appDetails) payload.appDetails = appDetails;\n  return createUnsignedTransactionPayload(payload);\n};\n\n// eslint-disable-next-line @typescript-eslint/require-await\nexport const makeSTXTransferToken = async (options: STXTransferOptions) => {\n  const { amount, appDetails, userSession, ..._options } = options;\n\n  if (hasAppPrivateKey(userSession)) {\n    const { privateKey, publicKey } = getKeys(userSession);\n    const payload: STXTransferPayload = {\n      ..._options,\n      amount: amount.toString(10),\n      publicKey,\n      txType: TransactionTypes.STXTransfer,\n    };\n    if (appDetails) payload.appDetails = appDetails;\n    return signPayload(payload, privateKey);\n  }\n\n  const payload: Partial<STXTransferPayload> = {\n    ..._options,\n    amount: amount.toString(10),\n    txType: TransactionTypes.STXTransfer,\n  };\n  if (appDetails) payload.appDetails = appDetails;\n  return createUnsignedTransactionPayload(payload);\n};\n\nasync function generateTokenAndOpenPopup<T extends TransactionOptions>(\n  options: T,\n  makeTokenFn: (options: T) => Promise<string>\n) {\n  const token = await makeTokenFn({\n    ...getDefaults(options),\n    ...options,\n  } as T);\n  return openTransactionPopup({ token, options });\n}\n\nexport function openContractCall(options: ContractCallRegularOptions): Promise<void>;\nexport function openContractCall(options: ContractCallSponsoredOptions): Promise<void>;\nexport function openContractCall(options: ContractCallOptions): Promise<void>;\nexport function openContractCall(options: ContractCallOptions) {\n  return generateTokenAndOpenPopup(options, makeContractCallToken);\n}\n\nexport function openContractDeploy(options: ContractDeployRegularOptions): Promise<void>;\nexport function openContractDeploy(options: ContractDeploySponsoredOptions): Promise<void>;\nexport function openContractDeploy(options: ContractDeployOptions): Promise<void>;\nexport function openContractDeploy(options: ContractDeployOptions) {\n  return generateTokenAndOpenPopup(options, makeContractDeployToken);\n}\n\nexport function openSTXTransfer(options: STXTransferRegularOptions): Promise<void>;\nexport function openSTXTransfer(options: STXTransferSponsoredOptions): Promise<void>;\nexport function openSTXTransfer(options: STXTransferOptions): Promise<void>;\nexport function openSTXTransfer(options: STXTransferOptions) {\n  return generateTokenAndOpenPopup(options, makeSTXTransferToken);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}