{"ast":null,"code":"import { ClarityType } from '../constants';\nfunction responseErrorCV(value) {\n  return {\n    type: ClarityType.ResponseErr,\n    value\n  };\n}\nfunction responseOkCV(value) {\n  return {\n    type: ClarityType.ResponseOk,\n    value\n  };\n}\nexport { responseErrorCV, responseOkCV };","map":{"version":3,"names":["ClarityType","responseErrorCV","value","type","ResponseErr","responseOkCV","ResponseOk"],"sources":["C:\\Users\\abasi\\Desktop\\web3-apps\\react-cra\\node_modules\\@stacks\\transactions\\src\\clarity\\types\\responseCV.ts"],"sourcesContent":["import { ClarityValue } from '../clarityValue';\nimport { ClarityType } from '../constants';\n\ntype ResponseCV = ResponseErrorCV | ResponseOkCV;\n\ninterface ResponseErrorCV<T extends ClarityValue = ClarityValue> {\n  readonly type: ClarityType.ResponseErr;\n  readonly value: T;\n}\n\ninterface ResponseOkCV<T extends ClarityValue = ClarityValue> {\n  readonly type: ClarityType.ResponseOk;\n  readonly value: T;\n}\n\n/**\n * Converts ClarityValue to responseErrorCV\n *\n * @param {value} ClarityValue value to be converted to responseErrorCV clarity type\n *\n * @returns {responseErrorCV} returns instance of type responseErrorCV\n *\n * @example\n * ```\n *  import { responseErrorCV, intCV } from '@stacks/transactions';\n *\n *  const respErrorCV = responseErrorCV(intCV(1));\n *\n *  // { type: 8, value: { type: 0, value: 1n } }\n * ```\n *\n * @see\n * {@link https://github.com/hirosystems/stacks.js/blob/master/packages/transactions/tests/clarity.test.ts | clarity test cases for more examples}\n */\nfunction responseErrorCV<T extends ClarityValue = ClarityValue>(value: T): ResponseErrorCV<T> {\n  return { type: ClarityType.ResponseErr, value };\n}\n\n/**\n * Converts ClarityValue to ResponseOkCV\n *\n * @param {value} ClarityValue value to be converted to ResponseOkCV clarity type\n *\n * @returns {ResponseOkCV} returns instance of type ResponseOkCV\n *\n * @example\n * ```\n *  import { responseOkCV, intCV } from '@stacks/transactions';\n *\n *  const respOKCV = responseOkCV(intCV(1));\n *\n *  // { type: 7, value: { type: 0, value: 1n } }\n * ```\n *\n * @see\n * {@link https://github.com/hirosystems/stacks.js/blob/master/packages/transactions/tests/clarity.test.ts | clarity test cases for more examples}\n */\nfunction responseOkCV<T extends ClarityValue = ClarityValue>(value: T): ResponseOkCV<T> {\n  return { type: ClarityType.ResponseOk, value };\n}\n\nexport { ResponseCV, ResponseErrorCV, ResponseOkCV, responseErrorCV, responseOkCV };\n"],"mappings":"AACA,SAASA,WAAW,QAAQ,cAAc;AAiC1C,SAASC,eAAeA,CAAwCC,KAAQ;EACtE,OAAO;IAAEC,IAAI,EAAEH,WAAW,CAACI,WAAW;IAAEF;EAAK,CAAE;AACjD;AAqBA,SAASG,YAAYA,CAAwCH,KAAQ;EACnE,OAAO;IAAEC,IAAI,EAAEH,WAAW,CAACM,UAAU;IAAEJ;EAAK,CAAE;AAChD;AAEA,SAAoDD,eAAe,EAAEI,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}