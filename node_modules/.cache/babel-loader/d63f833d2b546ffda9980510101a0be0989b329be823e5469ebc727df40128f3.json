{"ast":null,"code":"import { utf8ToBytes } from '@stacks/common';\nimport { ClarityType } from '../constants';\nconst bufferCV = buffer => {\n  if (buffer.length > 1000000) {\n    throw new Error('Cannot construct clarity buffer that is greater than 1MB');\n  }\n  return {\n    type: ClarityType.Buffer,\n    buffer\n  };\n};\nconst bufferCVFromString = str => bufferCV(utf8ToBytes(str));\nexport { bufferCV, bufferCVFromString };","map":{"version":3,"names":["utf8ToBytes","ClarityType","bufferCV","buffer","length","Error","type","Buffer","bufferCVFromString","str"],"sources":["C:\\Users\\abasi\\Desktop\\web3-apps\\react-cra\\node_modules\\@stacks\\transactions\\src\\clarity\\types\\bufferCV.ts"],"sourcesContent":["import { utf8ToBytes } from '@stacks/common';\nimport { ClarityType } from '../constants';\n\ninterface BufferCV {\n  readonly type: ClarityType.Buffer;\n  readonly buffer: Uint8Array;\n}\n\n/**\n * Converts a Uint8Array to a BufferCV clarity type\n *\n * @param {Uint8Array} buffer value to be converted to clarity type\n *\n * @returns {BufferCV} returns instance of type BufferCV\n *\n * @example\n * ```\n *  import { bufferCV } from '@stacks/transactions';\n *\n *  const buffer = utf8ToBytes('this is a test');\n *  const buf = bufferCV(buffer);\n *  // { type: 2, buffer: <Uint8Array 74 68 69 73 20 69 73 20 61 20 74 65 73 74> }\n *  const value = bytesToUtf8(buf.buffer);\n *  // this is a test\n * ```\n *\n * @see\n * {@link https://github.com/hirosystems/stacks.js/blob/master/packages/transactions/tests/clarity.test.ts | clarity test cases for more examples}\n */\nconst bufferCV = (buffer: Uint8Array): BufferCV => {\n  if (buffer.length > 1_000_000) {\n    throw new Error('Cannot construct clarity buffer that is greater than 1MB');\n  }\n\n  return { type: ClarityType.Buffer, buffer };\n};\n\n/**\n * Converts a string to BufferCV clarity type\n *\n * @param {str} string input to be converted to bufferCV clarity type\n *\n * @returns {BufferCV} returns instance of type BufferCV\n *\n * @example\n * ```\n *  import { bufferCVFromString } from '@stacks/transactions';\n *\n *  const str = 'this is a test';\n *  const buf = bufferCVFromString(str);\n *  // { type: 2, buffer: <Buffer 74 68 69 73 20 69 73 20 61 20 74 65 73 74> }\n *  const value = bytesToUtf8(buf.buffer);\n *  // this is a test\n *```\n *\n * @see\n * {@link https://github.com/hirosystems/stacks.js/blob/master/packages/transactions/tests/clarity.test.ts | clarity test cases for more examples}\n */\nconst bufferCVFromString = (str: string): BufferCV => bufferCV(utf8ToBytes(str));\n\nexport { BufferCV, bufferCV, bufferCVFromString };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,WAAW,QAAQ,cAAc;AA4B1C,MAAMC,QAAQ,GAAIC,MAAkB,IAAc;EAChD,IAAIA,MAAM,CAACC,MAAM,GAAG,OAAS,EAAE;IAC7B,MAAM,IAAIC,KAAK,CAAC,0DAA0D,CAAC;;EAG7E,OAAO;IAAEC,IAAI,EAAEL,WAAW,CAACM,MAAM;IAAEJ;EAAM,CAAE;AAC7C,CAAC;AAuBD,MAAMK,kBAAkB,GAAIC,GAAW,IAAeP,QAAQ,CAACF,WAAW,CAACS,GAAG,CAAC,CAAC;AAEhF,SAAmBP,QAAQ,EAAEM,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}