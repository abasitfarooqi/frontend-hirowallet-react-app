{"ast":null,"code":"import { sha256 } from '@noble/hashes/sha256';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { getCryptoLib } from './cryptoUtils';\nexport class NodeCryptoSha2Hash {\n  constructor(createHash) {\n    this.createHash = createHash;\n  }\n  async digest(data) {\n    let algorithm = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'sha256';\n    try {\n      const result = this.createHash(algorithm).update(data).digest();\n      return Promise.resolve(result);\n    } catch (error) {\n      console.log(error);\n      console.log(`Error performing ${algorithm} digest with Node.js 'crypto.createHash', falling back to JS implementation.`);\n      return Promise.resolve(algorithm === 'sha256' ? hashSha256Sync(data) : hashSha512Sync(data));\n    }\n  }\n}\nexport class WebCryptoSha2Hash {\n  constructor(subtleCrypto) {\n    this.subtleCrypto = subtleCrypto;\n  }\n  async digest(data) {\n    let algorithm = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'sha256';\n    let algo;\n    if (algorithm === 'sha256') {\n      algo = 'SHA-256';\n    } else if (algorithm === 'sha512') {\n      algo = 'SHA-512';\n    } else {\n      throw new Error(`Unsupported hash algorithm ${algorithm}`);\n    }\n    try {\n      const hash = await this.subtleCrypto.digest(algo, data);\n      return new Uint8Array(hash);\n    } catch (error) {\n      console.log(error);\n      console.log(`Error performing ${algorithm} digest with WebCrypto, falling back to JS implementation.`);\n      return Promise.resolve(algorithm === 'sha256' ? hashSha256Sync(data) : hashSha512Sync(data));\n    }\n  }\n}\nexport async function createSha2Hash() {\n  const cryptoLib = await getCryptoLib();\n  if (cryptoLib.name === 'subtleCrypto') {\n    return new WebCryptoSha2Hash(cryptoLib.lib);\n  } else {\n    return new NodeCryptoSha2Hash(cryptoLib.lib.createHash);\n  }\n}\nexport function hashSha256Sync(data) {\n  return sha256(data);\n}\nexport function hashSha512Sync(data) {\n  return sha512(data);\n}","map":{"version":3,"names":["sha256","sha512","getCryptoLib","NodeCryptoSha2Hash","constructor","createHash","digest","data","algorithm","arguments","length","undefined","result","update","Promise","resolve","error","console","log","hashSha256Sync","hashSha512Sync","WebCryptoSha2Hash","subtleCrypto","algo","Error","hash","Uint8Array","createSha2Hash","cryptoLib","name","lib"],"sources":["C:\\Users\\abasi\\Desktop\\web3-apps\\react-cra\\node_modules\\@stacks\\encryption\\src\\sha2Hash.ts"],"sourcesContent":["import { sha256 } from '@noble/hashes/sha256';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { getCryptoLib } from './cryptoUtils';\n\ntype NodeCryptoCreateHash = typeof import('crypto').createHash;\n\nexport interface Sha2Hash {\n  digest(data: Uint8Array, algorithm?: 'sha256' | 'sha512'): Promise<Uint8Array>;\n}\n\nexport class NodeCryptoSha2Hash {\n  createHash: NodeCryptoCreateHash;\n\n  constructor(createHash: NodeCryptoCreateHash) {\n    this.createHash = createHash;\n  }\n\n  async digest(data: Uint8Array, algorithm = 'sha256'): Promise<Uint8Array> {\n    try {\n      const result = this.createHash(algorithm).update(data).digest();\n      return Promise.resolve(result);\n    } catch (error) {\n      console.log(error);\n      console.log(\n        `Error performing ${algorithm} digest with Node.js 'crypto.createHash', falling back to JS implementation.`\n      );\n      return Promise.resolve(algorithm === 'sha256' ? hashSha256Sync(data) : hashSha512Sync(data));\n    }\n  }\n}\n\nexport class WebCryptoSha2Hash implements Sha2Hash {\n  subtleCrypto: SubtleCrypto;\n\n  constructor(subtleCrypto: SubtleCrypto) {\n    this.subtleCrypto = subtleCrypto;\n  }\n\n  async digest(data: Uint8Array, algorithm = 'sha256'): Promise<Uint8Array> {\n    let algo: string;\n    if (algorithm === 'sha256') {\n      algo = 'SHA-256';\n    } else if (algorithm === 'sha512') {\n      algo = 'SHA-512';\n    } else {\n      throw new Error(`Unsupported hash algorithm ${algorithm}`);\n    }\n    try {\n      const hash = await this.subtleCrypto.digest(algo, data);\n      return new Uint8Array(hash);\n    } catch (error) {\n      console.log(error);\n      console.log(\n        `Error performing ${algorithm} digest with WebCrypto, falling back to JS implementation.`\n      );\n      return Promise.resolve(algorithm === 'sha256' ? hashSha256Sync(data) : hashSha512Sync(data));\n    }\n  }\n}\n\nexport async function createSha2Hash(): Promise<Sha2Hash> {\n  const cryptoLib = await getCryptoLib();\n  if (cryptoLib.name === 'subtleCrypto') {\n    return new WebCryptoSha2Hash(cryptoLib.lib);\n  } else {\n    return new NodeCryptoSha2Hash(cryptoLib.lib.createHash);\n  }\n}\n\nexport function hashSha256Sync(data: Uint8Array) {\n  return sha256(data);\n}\n\nexport function hashSha512Sync(data: Uint8Array) {\n  return sha512(data);\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,YAAY,QAAQ,eAAe;AAQ5C,OAAM,MAAOC,kBAAkB;EAG7BC,YAAYC,UAAgC;IAC1C,IAAI,CAACA,UAAU,GAAGA,UAAU;EAC9B;EAEA,MAAMC,MAAMA,CAACC,IAAgB,EAAsB;IAAA,IAApBC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,QAAQ;IACjD,IAAI;MACF,MAAMG,MAAM,GAAG,IAAI,CAACP,UAAU,CAACG,SAAS,CAAC,CAACK,MAAM,CAACN,IAAI,CAAC,CAACD,MAAM,EAAE;MAC/D,OAAOQ,OAAO,CAACC,OAAO,CAACH,MAAM,CAAC;KAC/B,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClBC,OAAO,CAACC,GAAG,CACT,oBAAoBV,SAAS,8EAA8E,CAC5G;MACD,OAAOM,OAAO,CAACC,OAAO,CAACP,SAAS,KAAK,QAAQ,GAAGW,cAAc,CAACZ,IAAI,CAAC,GAAGa,cAAc,CAACb,IAAI,CAAC,CAAC;;EAEhG;;AAGF,OAAM,MAAOc,iBAAiB;EAG5BjB,YAAYkB,YAA0B;IACpC,IAAI,CAACA,YAAY,GAAGA,YAAY;EAClC;EAEA,MAAMhB,MAAMA,CAACC,IAAgB,EAAsB;IAAA,IAApBC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,QAAQ;IACjD,IAAIc,IAAY;IAChB,IAAIf,SAAS,KAAK,QAAQ,EAAE;MAC1Be,IAAI,GAAG,SAAS;KACjB,MAAM,IAAIf,SAAS,KAAK,QAAQ,EAAE;MACjCe,IAAI,GAAG,SAAS;KACjB,MAAM;MACL,MAAM,IAAIC,KAAK,CAAC,8BAA8BhB,SAAS,EAAE,CAAC;;IAE5D,IAAI;MACF,MAAMiB,IAAI,GAAG,MAAM,IAAI,CAACH,YAAY,CAAChB,MAAM,CAACiB,IAAI,EAAEhB,IAAI,CAAC;MACvD,OAAO,IAAImB,UAAU,CAACD,IAAI,CAAC;KAC5B,CAAC,OAAOT,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClBC,OAAO,CAACC,GAAG,CACT,oBAAoBV,SAAS,4DAA4D,CAC1F;MACD,OAAOM,OAAO,CAACC,OAAO,CAACP,SAAS,KAAK,QAAQ,GAAGW,cAAc,CAACZ,IAAI,CAAC,GAAGa,cAAc,CAACb,IAAI,CAAC,CAAC;;EAEhG;;AAGF,OAAO,eAAeoB,cAAcA,CAAA;EAClC,MAAMC,SAAS,GAAG,MAAM1B,YAAY,EAAE;EACtC,IAAI0B,SAAS,CAACC,IAAI,KAAK,cAAc,EAAE;IACrC,OAAO,IAAIR,iBAAiB,CAACO,SAAS,CAACE,GAAG,CAAC;GAC5C,MAAM;IACL,OAAO,IAAI3B,kBAAkB,CAACyB,SAAS,CAACE,GAAG,CAACzB,UAAU,CAAC;;AAE3D;AAEA,OAAM,SAAUc,cAAcA,CAACZ,IAAgB;EAC7C,OAAOP,MAAM,CAACO,IAAI,CAAC;AACrB;AAEA,OAAM,SAAUa,cAAcA,CAACb,IAAgB;EAC7C,OAAON,MAAM,CAACM,IAAI,CAAC;AACrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}