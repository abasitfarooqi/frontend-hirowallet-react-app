{"ast":null,"code":"'use strict';\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it;\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\nfunction getZoneFileTemplate() {\n  return '{$origin}\\n\\\n{$ttl}\\n\\\n\\n\\\n; SOA Record\\n\\\n{name} {ttl}    IN  SOA {mname}{rname}(\\n\\\n{serial} ;serial\\n\\\n{refresh} ;refresh\\n\\\n{retry} ;retry\\n\\\n{expire} ;expire\\n\\\n{minimum} ;minimum ttl\\n\\\n)\\n\\\n\\n\\\n; NS Records\\n\\\n{ns}\\n\\\n\\n\\\n; MX Records\\n\\\n{mx}\\n\\\n\\n\\\n; A Records\\n\\\n{a}\\n\\\n\\n\\\n; AAAA Records\\n\\\n{aaaa}\\n\\\n\\n\\\n; CNAME Records\\n\\\n{cname}\\n\\\n\\n\\\n; PTR Records\\n\\\n{ptr}\\n\\\n\\n\\\n; TXT Records\\n\\\n{txt}\\n\\\n\\n\\\n; SRV Records\\n\\\n{srv}\\n\\\n\\n\\\n; SPF Records\\n\\\n{spf}\\n\\\n\\n\\\n; URI Records\\n\\\n{uri}\\n\\\n';\n}\nfunction makeZoneFile(jsonZoneFile, template) {\n  if (template === void 0) {\n    template = getZoneFileTemplate();\n  }\n  template = processOrigin(jsonZoneFile['$origin'], template);\n  template = processTTL(jsonZoneFile['$ttl'], template);\n  template = processSOA(jsonZoneFile['soa'], template);\n  template = processNS(jsonZoneFile['ns'], template);\n  template = processA(jsonZoneFile['a'], template);\n  template = processAAAA(jsonZoneFile['aaaa'], template);\n  template = processCNAME(jsonZoneFile['cname'], template);\n  template = processMX(jsonZoneFile['mx'], template);\n  template = processPTR(jsonZoneFile['ptr'], template);\n  template = processTXT(jsonZoneFile['txt'], template);\n  template = processSRV(jsonZoneFile['srv'], template);\n  template = processSPF(jsonZoneFile['spf'], template);\n  template = processURI(jsonZoneFile['uri'], template);\n  template = processValues(jsonZoneFile, template);\n  return template.replace(/\\n{2,}/gim, '\\n\\n');\n}\nfunction processOrigin(data, template) {\n  var ret = '';\n  if (typeof data !== 'undefined') {\n    ret += '$ORIGIN ' + data;\n  }\n  return template.replace('{$origin}', ret);\n}\nfunction processTTL(data, template) {\n  var ret = '';\n  if (typeof data !== 'undefined') {\n    ret += '$TTL ' + data;\n  }\n  return template.replace('{$ttl}', ret);\n}\nfunction processSOA(data, template) {\n  var ret = template;\n  if (typeof data !== 'undefined') {\n    data.name = data.name || '@';\n    data.ttl = data.ttl || '';\n    for (var key in data) {\n      var value = data[key];\n      ret = ret.replace('{' + key + '}', value + '\\t');\n    }\n  }\n  return ret;\n}\nfunction processNS(data, template) {\n  var ret = '';\n  if (data) {\n    for (var _iterator = _createForOfIteratorHelperLoose(data), _step; !(_step = _iterator()).done;) {\n      var record = _step.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tNS\\t' + record.host + '\\n';\n    }\n  }\n  return template.replace('{ns}', ret);\n}\nfunction processA(data, template) {\n  var ret = '';\n  if (data) {\n    for (var _iterator2 = _createForOfIteratorHelperLoose(data), _step2; !(_step2 = _iterator2()).done;) {\n      var record = _step2.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tA\\t' + record.ip + '\\n';\n    }\n  }\n  return template.replace('{a}', ret);\n}\nfunction processAAAA(data, template) {\n  var ret = '';\n  if (data) {\n    for (var _iterator3 = _createForOfIteratorHelperLoose(data), _step3; !(_step3 = _iterator3()).done;) {\n      var record = _step3.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tAAAA\\t' + record.ip + '\\n';\n    }\n  }\n  return template.replace('{aaaa}', ret);\n}\nfunction processCNAME(data, template) {\n  var ret = '';\n  if (data) {\n    for (var _iterator4 = _createForOfIteratorHelperLoose(data), _step4; !(_step4 = _iterator4()).done;) {\n      var record = _step4.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tCNAME\\t' + record.alias + '\\n';\n    }\n  }\n  return template.replace('{cname}', ret);\n}\nfunction processMX(data, template) {\n  var ret = '';\n  if (data) {\n    for (var _iterator5 = _createForOfIteratorHelperLoose(data), _step5; !(_step5 = _iterator5()).done;) {\n      var record = _step5.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tMX\\t' + record.preference + '\\t' + record.host + '\\n';\n    }\n  }\n  return template.replace('{mx}', ret);\n}\nfunction processPTR(data, template) {\n  var ret = '';\n  if (data) {\n    for (var _iterator6 = _createForOfIteratorHelperLoose(data), _step6; !(_step6 = _iterator6()).done;) {\n      var record = _step6.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tPTR\\t' + record.host + '\\n';\n    }\n  }\n  return template.replace('{ptr}', ret);\n}\nfunction processTXT(data, template) {\n  var ret = '';\n  if (data) {\n    for (var _iterator7 = _createForOfIteratorHelperLoose(data), _step7; !(_step7 = _iterator7()).done;) {\n      var record = _step7.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tTXT\\t';\n      var txtData = record.txt;\n      if (typeof txtData === 'string') {\n        ret += '\"' + txtData + '\"';\n      } else if (txtData instanceof Array) {\n        ret += txtData.map(function (datum) {\n          return '\"' + datum + '\"';\n        }).join(' ');\n      }\n      ret += '\\n';\n    }\n  }\n  return template.replace('{txt}', ret);\n}\nfunction processSRV(data, template) {\n  var ret = '';\n  if (data) {\n    for (var _iterator8 = _createForOfIteratorHelperLoose(data), _step8; !(_step8 = _iterator8()).done;) {\n      var record = _step8.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tSRV\\t' + record.priority + '\\t';\n      ret += record.weight + '\\t';\n      ret += record.port + '\\t';\n      ret += record.target + '\\n';\n    }\n  }\n  return template.replace('{srv}', ret);\n}\nfunction processSPF(data, template) {\n  var ret = '';\n  if (data) {\n    for (var _iterator9 = _createForOfIteratorHelperLoose(data), _step9; !(_step9 = _iterator9()).done;) {\n      var record = _step9.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tSPF\\t' + record.data + '\\n';\n    }\n  }\n  return template.replace('{spf}', ret);\n}\nfunction processURI(data, template) {\n  var ret = '';\n  if (data) {\n    for (var _iterator10 = _createForOfIteratorHelperLoose(data), _step10; !(_step10 = _iterator10()).done;) {\n      var record = _step10.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tURI\\t' + record.priority + '\\t';\n      ret += record.weight + '\\t';\n      ret += '\"' + record.target + '\"\\n';\n    }\n  }\n  return template.replace('{uri}', ret);\n}\nfunction processValues(jsonZoneFile, template) {\n  template = template.replace('{zone}', jsonZoneFile['$origin'] || (jsonZoneFile['soa'] ? jsonZoneFile['soa']['name'] : false) || '');\n  template = template.replace('{datetime}', new Date().toISOString());\n  var time = Math.round(Date.now() / 1000);\n  return template.replace('{time}', \"\" + time);\n}\nfunction parseZoneFile(text) {\n  text = removeComments(text);\n  text = flatten(text);\n  return parseRRs(text);\n}\nfunction removeComments(text) {\n  var re = /(^|[^\\\\]);.*/g;\n  return text.replace(re, function (_m, g1) {\n    return g1 ? g1 : ''; // if g1 is set/matched, re-insert it, else remove\n  });\n}\n\nfunction flatten(text) {\n  var captured = [];\n  var re = /\\([\\s\\S]*?\\)/gim;\n  var match = re.exec(text);\n  while (match !== null) {\n    var replacement = match[0].replace(/\\s+/gm, ' ');\n    captured.push({\n      match: match,\n      replacement: replacement\n    }); // captured Text, index, input\n\n    match = re.exec(text);\n  }\n  var arrText = text.split('');\n  for (var _i = 0, _captured = captured; _i < _captured.length; _i++) {\n    var cur = _captured[_i];\n    var _match = cur.match,\n      _replacement = cur.replacement;\n    arrText.splice(_match.index, _match[0].length, _replacement);\n  }\n  return arrText.join('').replace(/\\(|\\)/gim, ' ');\n}\nfunction parseRRs(text) {\n  var ret = {};\n  var rrs = text.split('\\n');\n  for (var _iterator = _createForOfIteratorHelperLoose(rrs), _step; !(_step = _iterator()).done;) {\n    var rr = _step.value;\n    if (!rr || !rr.trim()) {\n      continue;\n    }\n    var uRR = rr.toUpperCase();\n    if (/\\s+TXT\\s+/.test(uRR)) {\n      ret.txt = ret.txt || [];\n      ret.txt.push(parseTXT(rr));\n    } else if (uRR.indexOf('$ORIGIN') === 0) {\n      ret.$origin = rr.split(/\\s+/g)[1];\n    } else if (uRR.indexOf('$TTL') === 0) {\n      ret.$ttl = parseInt(rr.split(/\\s+/g)[1], 10);\n    } else if (/\\s+SOA\\s+/.test(uRR)) {\n      ret.soa = parseSOA(rr);\n    } else if (/\\s+NS\\s+/.test(uRR)) {\n      ret.ns = ret.ns || [];\n      ret.ns.push(parseNS(rr));\n    } else if (/\\s+A\\s+/.test(uRR)) {\n      ret.a = ret.a || [];\n      ret.a.push(parseA(rr, ret.a));\n    } else if (/\\s+AAAA\\s+/.test(uRR)) {\n      ret.aaaa = ret.aaaa || [];\n      ret.aaaa.push(parseAAAA(rr));\n    } else if (/\\s+CNAME\\s+/.test(uRR)) {\n      ret.cname = ret.cname || [];\n      ret.cname.push(parseCNAME(rr));\n    } else if (/\\s+MX\\s+/.test(uRR)) {\n      ret.mx = ret.mx || [];\n      ret.mx.push(parseMX(rr));\n    } else if (/\\s+PTR\\s+/.test(uRR)) {\n      ret.ptr = ret.ptr || [];\n      ret.ptr.push(parsePTR(rr, ret.ptr, ret.$origin));\n    } else if (/\\s+SRV\\s+/.test(uRR)) {\n      ret.srv = ret.srv || [];\n      ret.srv.push(parseSRV(rr));\n    } else if (/\\s+SPF\\s+/.test(uRR)) {\n      ret.spf = ret.spf || [];\n      ret.spf.push(parseSPF(rr));\n    } else if (/\\s+URI\\s+/.test(uRR)) {\n      ret.uri = ret.uri || [];\n      ret.uri.push(parseURI(rr));\n    }\n  }\n  return ret;\n}\nfunction parseSOA(rr) {\n  var soa = {};\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var l = rrTokens.length;\n  soa.name = rrTokens[0];\n  soa.minimum = parseInt(rrTokens[l - 1], 10);\n  soa.expire = parseInt(rrTokens[l - 2], 10);\n  soa.retry = parseInt(rrTokens[l - 3], 10);\n  soa.refresh = parseInt(rrTokens[l - 4], 10);\n  soa.serial = parseInt(rrTokens[l - 5], 10);\n  soa.rname = rrTokens[l - 6];\n  soa.mname = rrTokens[l - 7];\n  if (!isNaN(rrTokens[1])) soa.ttl = parseInt(rrTokens[1], 10);\n  return soa;\n}\nfunction parseNS(rr) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var l = rrTokens.length;\n  var result = {\n    name: rrTokens[0],\n    host: rrTokens[l - 1]\n  };\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\nfunction parseA(rr, recordsSoFar) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var urrTokens = rr.trim().toUpperCase().split(/\\s+/g);\n  var l = rrTokens.length;\n  var result = {\n    name: rrTokens[0],\n    ip: rrTokens[l - 1]\n  };\n  if (urrTokens.lastIndexOf('A') === 0) {\n    if (recordsSoFar.length) {\n      result.name = recordsSoFar[recordsSoFar.length - 1].name;\n    } else {\n      result.name = '@';\n    }\n  }\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\nfunction parseAAAA(rr) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var l = rrTokens.length;\n  var result = {\n    name: rrTokens[0],\n    ip: rrTokens[l - 1]\n  };\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\nfunction parseCNAME(rr) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var l = rrTokens.length;\n  var result = {\n    name: rrTokens[0],\n    alias: rrTokens[l - 1]\n  };\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\nfunction parseMX(rr) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var l = rrTokens.length;\n  var result = {\n    name: rrTokens[0],\n    preference: parseInt(rrTokens[l - 2], 10),\n    host: rrTokens[l - 1]\n  };\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\nfunction parseTXT(rr) {\n  var rrTokens = rr.trim().match(/[^\\s\"']+|\"[^\"]*\"|'[^']*'/g);\n  if (!rrTokens) throw new Error('Failure to tokenize TXT record');\n  var l = rrTokens.length;\n  var indexTXT = rrTokens.indexOf('TXT');\n  function stripText(txt) {\n    if (txt.indexOf('\"') > -1) {\n      txt = txt.split('\"')[1];\n    }\n    return txt;\n  }\n  var tokenTxt;\n  if (l - indexTXT - 1 > 1) {\n    tokenTxt = [].concat(rrTokens.slice(indexTXT + 1).map(stripText));\n  } else {\n    tokenTxt = stripText(rrTokens[l - 1]);\n  }\n  var result = {\n    name: rrTokens[0],\n    txt: tokenTxt\n  };\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\nfunction parsePTR(rr, recordsSoFar, currentOrigin) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var urrTokens = rr.trim().toUpperCase().split(/\\s+/g);\n  if (urrTokens.lastIndexOf('PTR') === 0 && recordsSoFar[recordsSoFar.length - 1]) {\n    rrTokens.unshift(recordsSoFar[recordsSoFar.length - 1].name);\n  }\n  var l = rrTokens.length;\n  var result = {\n    name: rrTokens[0],\n    fullname: rrTokens[0] + '.' + currentOrigin,\n    host: rrTokens[l - 1]\n  };\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\nfunction parseSRV(rr) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var l = rrTokens.length;\n  var result = {\n    name: rrTokens[0],\n    target: rrTokens[l - 1],\n    priority: parseInt(rrTokens[l - 4], 10),\n    weight: parseInt(rrTokens[l - 3], 10),\n    port: parseInt(rrTokens[l - 2], 10)\n  };\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\nfunction parseSPF(rr) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var result = {\n    name: rrTokens[0],\n    data: ''\n  };\n  var l = rrTokens.length;\n  while (l-- > 4) {\n    result.data = rrTokens[l] + ' ' + result.data.trim();\n  }\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\nfunction parseURI(rr) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var l = rrTokens.length;\n  var result = {\n    name: rrTokens[0],\n    target: rrTokens[l - 1].replace(/\"/g, ''),\n    priority: parseInt(rrTokens[l - 3], 10),\n    weight: parseInt(rrTokens[l - 2], 10)\n  };\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\nvar ZoneFile = /*#__PURE__*/function () {\n  function ZoneFile(zoneFile) {\n    if (typeof zoneFile === 'object') {\n      this.jsonZoneFile = JSON.parse(JSON.stringify(zoneFile));\n    } else if (typeof zoneFile === 'string') {\n      this.jsonZoneFile = parseZoneFile(zoneFile);\n    } else {\n      this.jsonZoneFile = undefined;\n    }\n  }\n  var _proto = ZoneFile.prototype;\n  _proto.toJSON = function toJSON() {\n    return this.jsonZoneFile;\n  };\n  _proto.toString = function toString() {\n    return makeZoneFile(this.toJSON());\n  };\n  return ZoneFile;\n}();\nexports.ZoneFile = ZoneFile;\nexports.makeZoneFile = makeZoneFile;\nexports.parseZoneFile = parseZoneFile;","map":{"version":3,"names":["getZoneFileTemplate","makeZoneFile","jsonZoneFile","template","processOrigin","processTTL","processSOA","processNS","processA","processAAAA","processCNAME","processMX","processPTR","processTXT","processSRV","processSPF","processURI","processValues","replace","data","ret","name","ttl","key","value","_iterator","_createForOfIteratorHelperLoose","_step","done","record","host","_iterator2","_step2","ip","_iterator3","_step3","_iterator4","_step4","alias","_iterator5","_step5","preference","_iterator6","_step6","_iterator7","_step7","txtData","txt","Array","map","datum","join","_iterator8","_step8","priority","weight","port","target","_iterator9","_step9","_iterator10","_step10","Date","toISOString","time","Math","round","now","parseZoneFile","text","removeComments","flatten","parseRRs","re","_m","g1","captured","match","exec","replacement","push","arrText","split","_i","_captured","length","cur","_match","_replacement","splice","index","rrs","rr","trim","uRR","toUpperCase","test","parseTXT","indexOf","$origin","$ttl","parseInt","soa","parseSOA","ns","parseNS","a","parseA","aaaa","parseAAAA","cname","parseCNAME","mx","parseMX","ptr","parsePTR","srv","parseSRV","spf","parseSPF","uri","parseURI","rrTokens","l","minimum","expire","retry","refresh","serial","rname","mname","isNaN","result","recordsSoFar","urrTokens","lastIndexOf","Error","indexTXT","stripText","tokenTxt","concat","slice","currentOrigin","unshift","fullname","ZoneFile","zoneFile","JSON","parse","stringify","undefined","_proto","prototype","toJSON","toString"],"sources":["C:\\Users\\abasi\\Desktop\\web3-apps\\react-cra\\node_modules\\zone-file\\src\\zoneFileTemplate.ts","C:\\Users\\abasi\\Desktop\\web3-apps\\react-cra\\node_modules\\zone-file\\src\\makeZoneFile.ts","C:\\Users\\abasi\\Desktop\\web3-apps\\react-cra\\node_modules\\zone-file\\src\\parseZoneFile.ts","C:\\Users\\abasi\\Desktop\\web3-apps\\react-cra\\node_modules\\zone-file\\src\\zoneFile.ts"],"sourcesContent":["export function getZoneFileTemplate() {\n  return '{$origin}\\n\\\n{$ttl}\\n\\\n\\n\\\n; SOA Record\\n\\\n{name} {ttl}    IN  SOA {mname}{rname}(\\n\\\n{serial} ;serial\\n\\\n{refresh} ;refresh\\n\\\n{retry} ;retry\\n\\\n{expire} ;expire\\n\\\n{minimum} ;minimum ttl\\n\\\n)\\n\\\n\\n\\\n; NS Records\\n\\\n{ns}\\n\\\n\\n\\\n; MX Records\\n\\\n{mx}\\n\\\n\\n\\\n; A Records\\n\\\n{a}\\n\\\n\\n\\\n; AAAA Records\\n\\\n{aaaa}\\n\\\n\\n\\\n; CNAME Records\\n\\\n{cname}\\n\\\n\\n\\\n; PTR Records\\n\\\n{ptr}\\n\\\n\\n\\\n; TXT Records\\n\\\n{txt}\\n\\\n\\n\\\n; SRV Records\\n\\\n{srv}\\n\\\n\\n\\\n; SPF Records\\n\\\n{spf}\\n\\\n\\n\\\n; URI Records\\n\\\n{uri}\\n\\\n';\n}\n","import {\n  AType,\n  CNAMEType,\n  MXType,\n  NSType,\n  SoaType,\n  SPFType,\n  SRVType,\n  TXTType,\n  URIType,\n  ZoneFileObject,\n} from './zoneFile';\n\nimport { getZoneFileTemplate } from './zoneFileTemplate';\n\nexport function makeZoneFile(jsonZoneFile: ZoneFileObject, template: string = getZoneFileTemplate()) {\n  template = processOrigin(jsonZoneFile['$origin'], template);\n  template = processTTL(jsonZoneFile['$ttl'], template);\n  template = processSOA(jsonZoneFile['soa'], template);\n  template = processNS(jsonZoneFile['ns'], template);\n  template = processA(jsonZoneFile['a'], template);\n  template = processAAAA(jsonZoneFile['aaaa'], template);\n  template = processCNAME(jsonZoneFile['cname'], template);\n  template = processMX(jsonZoneFile['mx'], template);\n  template = processPTR(jsonZoneFile['ptr'], template);\n  template = processTXT(jsonZoneFile['txt'], template);\n  template = processSRV(jsonZoneFile['srv'], template);\n  template = processSPF(jsonZoneFile['spf'], template);\n  template = processURI(jsonZoneFile['uri'], template);\n  template = processValues(jsonZoneFile, template);\n  return template.replace(/\\n{2,}/gim, '\\n\\n');\n}\n\nfunction processOrigin(data: string | undefined, template: string) {\n  let ret = '';\n  if (typeof data !== 'undefined') {\n    ret += '$ORIGIN ' + data;\n  }\n  return template.replace('{$origin}', ret);\n}\n\nfunction processTTL(data: number | undefined, template: string) {\n  let ret = '';\n  if (typeof data !== 'undefined') {\n    ret += '$TTL ' + data;\n  }\n  return template.replace('{$ttl}', ret);\n}\n\nfunction processSOA(data: SoaType | undefined, template: string) {\n  let ret = template;\n  if (typeof data !== 'undefined') {\n    data.name = data.name || '@';\n    data.ttl = data.ttl || '';\n    for (const key in data) {\n      const value = (data as Record<string, string>)[key];\n      ret = ret.replace('{' + key + '}', value + '\\t');\n    }\n  }\n  return ret;\n}\n\nfunction processNS(data: NSType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tNS\\t' + record.host + '\\n';\n    }\n  }\n  return template.replace('{ns}', ret);\n}\n\nfunction processA(data: AType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tA\\t' + record.ip + '\\n';\n    }\n  }\n  return template.replace('{a}', ret);\n}\n\nfunction processAAAA(data: AType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tAAAA\\t' + record.ip + '\\n';\n    }\n  }\n  return template.replace('{aaaa}', ret);\n}\n\nfunction processCNAME(data: CNAMEType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tCNAME\\t' + record.alias + '\\n';\n    }\n  }\n  return template.replace('{cname}', ret);\n}\n\nfunction processMX(data: MXType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tMX\\t' + record.preference + '\\t' + record.host + '\\n';\n    }\n  }\n  return template.replace('{mx}', ret);\n}\n\nfunction processPTR(data: NSType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tPTR\\t' + record.host + '\\n';\n    }\n  }\n  return template.replace('{ptr}', ret);\n}\n\nfunction processTXT(data: TXTType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tTXT\\t';\n      const txtData = record.txt;\n      if (typeof txtData === 'string') {\n        ret += '\"' + txtData + '\"';\n      } else if (txtData instanceof Array) {\n        ret += txtData\n          .map(function(datum) {\n            return '\"' + datum + '\"';\n          })\n          .join(' ');\n      }\n      ret += '\\n';\n    }\n  }\n  return template.replace('{txt}', ret);\n}\n\nfunction processSRV(data: SRVType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tSRV\\t' + record.priority + '\\t';\n      ret += record.weight + '\\t';\n      ret += record.port + '\\t';\n      ret += record.target + '\\n';\n    }\n  }\n  return template.replace('{srv}', ret);\n}\n\nfunction processSPF(data: SPFType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tSPF\\t' + record.data + '\\n';\n    }\n  }\n  return template.replace('{spf}', ret);\n}\n\nfunction processURI(data: URIType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tURI\\t' + record.priority + '\\t';\n      ret += record.weight + '\\t';\n      ret += '\"' + record.target + '\"\\n';\n    }\n  }\n  return template.replace('{uri}', ret);\n}\n\nfunction processValues(jsonZoneFile: ZoneFileObject, template: string) {\n  template = template.replace(\n    '{zone}',\n    jsonZoneFile['$origin'] || (jsonZoneFile['soa'] ? jsonZoneFile['soa']['name'] : false) || ''\n  );\n  template = template.replace('{datetime}', new Date().toISOString());\n  const time = Math.round(Date.now() / 1000);\n  return template.replace('{time}', `${time}`);\n}\n","import {\n  NSType,\n  AType,\n  CNAMEType,\n  MXType,\n  TXTType,\n  SRVType,\n  SPFType,\n  URIType,\n  ZoneFileObject,\n  SoaType,\n} from './zoneFile';\n\nexport function parseZoneFile(text: string) {\n  text = removeComments(text);\n  text = flatten(text);\n  return parseRRs(text);\n}\n\nfunction removeComments(text: string) {\n  const re = /(^|[^\\\\]);.*/g;\n  return text.replace(re, function(_m, g1) {\n    return g1 ? g1 : ''; // if g1 is set/matched, re-insert it, else remove\n  });\n}\n\nfunction flatten(text: string) {\n  const captured = [];\n  const re = /\\([\\s\\S]*?\\)/gim;\n  let match = re.exec(text);\n  while (match !== null) {\n    const replacement = match[0].replace(/\\s+/gm, ' ');\n    captured.push({ match, replacement });\n    // captured Text, index, input\n    match = re.exec(text);\n  }\n  const arrText = text.split('');\n  for (const cur of captured) {\n    const { match, replacement } = cur;\n    arrText.splice(match.index, match[0].length, replacement);\n  }\n  return arrText.join('').replace(/\\(|\\)/gim, ' ');\n}\n\nfunction parseRRs(text: string) {\n  const ret: ZoneFileObject = {};\n  const rrs = text.split('\\n');\n  for (const rr of rrs) {\n    if (!rr || !rr.trim()) {\n      continue;\n    }\n    const uRR = rr.toUpperCase();\n    if (/\\s+TXT\\s+/.test(uRR)) {\n      ret.txt = ret.txt || [];\n      ret.txt.push(parseTXT(rr));\n    } else if (uRR.indexOf('$ORIGIN') === 0) {\n      ret.$origin = rr.split(/\\s+/g)[1];\n    } else if (uRR.indexOf('$TTL') === 0) {\n      ret.$ttl = parseInt(rr.split(/\\s+/g)[1], 10);\n    } else if (/\\s+SOA\\s+/.test(uRR)) {\n      ret.soa = parseSOA(rr);\n    } else if (/\\s+NS\\s+/.test(uRR)) {\n      ret.ns = ret.ns || [];\n      ret.ns.push(parseNS(rr));\n    } else if (/\\s+A\\s+/.test(uRR)) {\n      ret.a = ret.a || [];\n      ret.a.push(parseA(rr, ret.a));\n    } else if (/\\s+AAAA\\s+/.test(uRR)) {\n      ret.aaaa = ret.aaaa || [];\n      ret.aaaa.push(parseAAAA(rr));\n    } else if (/\\s+CNAME\\s+/.test(uRR)) {\n      ret.cname = ret.cname || [];\n      ret.cname.push(parseCNAME(rr));\n    } else if (/\\s+MX\\s+/.test(uRR)) {\n      ret.mx = ret.mx || [];\n      ret.mx.push(parseMX(rr));\n    } else if (/\\s+PTR\\s+/.test(uRR)) {\n      ret.ptr = ret.ptr || [];\n      ret.ptr.push(parsePTR(rr, ret.ptr, ret.$origin));\n    } else if (/\\s+SRV\\s+/.test(uRR)) {\n      ret.srv = ret.srv || [];\n      ret.srv.push(parseSRV(rr));\n    } else if (/\\s+SPF\\s+/.test(uRR)) {\n      ret.spf = ret.spf || [];\n      ret.spf.push(parseSPF(rr));\n    } else if (/\\s+URI\\s+/.test(uRR)) {\n      ret.uri = ret.uri || [];\n      ret.uri.push(parseURI(rr));\n    }\n  }\n  return ret;\n}\n\nfunction parseSOA(rr: string) {\n  const soa: SoaType = {};\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  soa.name = rrTokens[0];\n  soa.minimum = parseInt(rrTokens[l - 1], 10);\n  soa.expire = parseInt(rrTokens[l - 2], 10);\n  soa.retry = parseInt(rrTokens[l - 3], 10);\n  soa.refresh = parseInt(rrTokens[l - 4], 10);\n  soa.serial = parseInt(rrTokens[l - 5], 10);\n  soa.rname = rrTokens[l - 6];\n  soa.mname = rrTokens[l - 7];\n  if (!isNaN((rrTokens[1] as unknown) as number)) soa.ttl = parseInt(rrTokens[1], 10);\n  return soa;\n}\n\nfunction parseNS(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: NSType = {\n    name: rrTokens[0],\n    host: rrTokens[l - 1],\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseA(rr: string, recordsSoFar: AType[]) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const urrTokens = rr\n    .trim()\n    .toUpperCase()\n    .split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: AType = {\n    name: rrTokens[0],\n    ip: rrTokens[l - 1],\n  };\n\n  if (urrTokens.lastIndexOf('A') === 0) {\n    if (recordsSoFar.length) {\n      result.name = recordsSoFar[recordsSoFar.length - 1].name;\n    } else {\n      result.name = '@';\n    }\n  }\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseAAAA(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: AType = {\n    name: rrTokens[0],\n    ip: rrTokens[l - 1],\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseCNAME(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: CNAMEType = {\n    name: rrTokens[0],\n    alias: rrTokens[l - 1],\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseMX(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: MXType = {\n    name: rrTokens[0],\n    preference: parseInt(rrTokens[l - 2], 10),\n    host: rrTokens[l - 1],\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseTXT(rr: string) {\n  const rrTokens = rr.trim().match(/[^\\s\"']+|\"[^\"]*\"|'[^']*'/g);\n  if (!rrTokens) throw new Error('Failure to tokenize TXT record');\n  const l = rrTokens.length;\n  const indexTXT = rrTokens.indexOf('TXT');\n\n  function stripText(txt: string) {\n    if (txt.indexOf('\"') > -1) {\n      txt = txt.split('\"')[1];\n    }\n    return txt;\n  }\n\n  let tokenTxt: string | string[];\n  if (l - indexTXT - 1 > 1) {\n    tokenTxt = [...rrTokens.slice(indexTXT + 1).map(stripText)];\n  } else {\n    tokenTxt = stripText(rrTokens[l - 1]);\n  }\n\n  const result: TXTType = {\n    name: rrTokens[0],\n    txt: tokenTxt,\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parsePTR(rr: string, recordsSoFar: NSType[], currentOrigin: string | undefined) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const urrTokens = rr\n    .trim()\n    .toUpperCase()\n    .split(/\\s+/g);\n\n  if (urrTokens.lastIndexOf('PTR') === 0 && recordsSoFar[recordsSoFar.length - 1]) {\n    rrTokens.unshift(recordsSoFar[recordsSoFar.length - 1].name as string);\n  }\n\n  const l = rrTokens.length;\n  const result: NSType = {\n    name: rrTokens[0],\n    fullname: rrTokens[0] + '.' + currentOrigin,\n    host: rrTokens[l - 1],\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseSRV(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: SRVType = {\n    name: rrTokens[0],\n    target: rrTokens[l - 1],\n    priority: parseInt(rrTokens[l - 4], 10),\n    weight: parseInt(rrTokens[l - 3], 10),\n    port: parseInt(rrTokens[l - 2], 10),\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseSPF(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const result: SPFType = {\n    name: rrTokens[0],\n    data: '',\n  };\n\n  let l = rrTokens.length;\n  while (l-- > 4) {\n    result.data = rrTokens[l] + ' ' + result.data.trim();\n  }\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseURI(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: URIType = {\n    name: rrTokens[0],\n    target: rrTokens[l - 1].replace(/\"/g, ''),\n    priority: parseInt(rrTokens[l - 3], 10),\n    weight: parseInt(rrTokens[l - 2], 10),\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n","import { makeZoneFile } from './makeZoneFile';\nimport { parseZoneFile } from './parseZoneFile';\n\nexport type SoaType = {\n  name?: string;\n  ttl?: number | string;\n  minimum?: number;\n  expire?: number;\n  retry?: number;\n  refresh?: number;\n  serial?: number;\n  rname?: string;\n  mname?: string;\n};\nexport type NSType = { name: string; ttl?: number; host: string; fullname?: string };\nexport type AType = { name: string; ttl?: number; ip: string };\nexport type CNAMEType = { name: string; ttl?: number; alias: string };\nexport type MXType = { name: string; ttl?: number; host: string; preference: number };\nexport type TXTType = { name: string; ttl?: number; txt: string | string[] };\nexport type SRVType = { name: string; ttl?: number; priority: number; weight: number; port: number; target: string };\nexport type SPFType = { name: string; ttl?: number; data: string };\nexport type URIType = { name: string; ttl?: number; priority: number; weight: number; target: string };\n\nexport type ZoneFileObject = {\n  $origin?: string;\n  $ttl?: number;\n  soa?: SoaType;\n  ns?: NSType[];\n  a?: AType[];\n  aaaa?: AType[];\n  cname?: CNAMEType[];\n  mx?: MXType[];\n  ptr?: NSType[];\n  txt?: TXTType[];\n  srv?: SRVType[];\n  spf?: SPFType[];\n  uri?: URIType[];\n  $domain?: string;\n};\n\nexport class ZoneFile {\n  jsonZoneFile: ZoneFileObject;\n\n  constructor(zoneFile: ZoneFileObject | string) {\n    if (typeof zoneFile === 'object') {\n      this.jsonZoneFile = JSON.parse(JSON.stringify(zoneFile));\n    } else if (typeof zoneFile === 'string') {\n      this.jsonZoneFile = parseZoneFile(zoneFile);\n    } else {\n      this.jsonZoneFile = (undefined as unknown) as ZoneFileObject;\n    }\n  }\n\n  toJSON() {\n    return this.jsonZoneFile;\n  }\n\n  toString() {\n    return makeZoneFile(this.toJSON());\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}