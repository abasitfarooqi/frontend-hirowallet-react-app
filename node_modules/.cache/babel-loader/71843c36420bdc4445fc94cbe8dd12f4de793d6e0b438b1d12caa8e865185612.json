{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:\\Users\\abasi\\Desktop\\web3-apps\\react-cra\\node_modules\\@stacks\\auth\\src\\userData.ts"],"sourcesContent":["/**\n *  Returned from the [[UserSession.loadUserData]] function.\n */\nexport interface UserData {\n  // public: the email address for the user. only available if the `email`\n  // scope is requested, and if the user has entered a valid email into\n  // their profile.\n  //\n  // **Note**: Blockstack does not require email validation\n  // for users for privacy reasons and blah blah (something like this, idk)\n  email?: string;\n  // probably public: (a quick description of what this is, and a link to the\n  // DID foundation and/or the blockstack docs related to DID, idk)\n  decentralizedID?: string;\n  // probably private: looks like it happens to be the btc address but idk\n  // the value of establishing this as a supported field\n  identityAddress?: string;\n  // probably public: this is an advanced feature, I think many app devs\n  // using our more advanced encryption functions (as opposed to putFile/getFile),\n  // are probably using this. seems useful to explain.\n  appPrivateKey: string;\n  // maybe public: possibly useful for advanced devs / webapps. I see an opportunity\n  // to make a small plug about \"user owned data\" here, idk.\n  hubUrl: string;\n  coreNode: string;\n  // maybe private: this would be an advanced field for app devs to use.\n  authResponseToken: string;\n  // private: does not get sent to webapp at all.\n  coreSessionToken?: string;\n  // private: does not get sent to webapp at all.\n  gaiaAssociationToken?: string;\n  // public: this is the proper `Person` schema json for the user.\n  // This is the data that gets used when the `new blockstack.Person(profile)` class is used.\n  profile: any;\n  // private: does not get sent to webapp at all.\n  gaiaHubConfig?: any;\n  // Based on issue with incorrect appPrivateKey derivation see stacks-web-wallet issue #2238\n  appPrivateKeyFromWalletSalt?: string;\n}\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}