{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hashSha256Async = exports.hashSha256 = void 0;\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nfunction hashSha256(input) {\n  return (0, sha256_1.sha256)(input);\n}\nexports.hashSha256 = hashSha256;\nfunction hashSha256Async(input) {\n  return __awaiter(this, void 0, void 0, function* () {\n    try {\n      const isSubtleCryptoAvailable = typeof crypto !== 'undefined' && typeof crypto.subtle !== 'undefined';\n      if (isSubtleCryptoAvailable) {\n        // Use the W3C Web Crypto API if available (running in a web browser).\n        const bytes = typeof input === 'string' ? new TextEncoder().encode(input) : input;\n        const hash = yield crypto.subtle.digest('SHA-256', bytes);\n        return new Uint8Array(hash);\n      } else {\n        // Otherwise try loading the Node.js `crypto` module (running in Node.js, or an older browser with a polyfill).\n        const nodeCrypto = require('crypto');\n        if (!nodeCrypto.createHash) {\n          throw new Error('`crypto` module does not contain `createHash`');\n        }\n        return Promise.resolve(nodeCrypto.createHash('sha256').update(input).digest());\n      }\n    } catch (error) {\n      console.log(error);\n      console.log('Crypto lib not found. Neither the global `crypto.subtle` Web Crypto API, ' + 'nor the or the Node.js `require(\"crypto\").createHash` module is available. ' + 'Falling back to JS implementation.');\n      return Promise.resolve(hashSha256(input));\n    }\n  });\n}\nexports.hashSha256Async = hashSha256Async;","map":{"version":3,"names":["sha256_1","require","hashSha256","input","sha256","exports","hashSha256Async","isSubtleCryptoAvailable","crypto","subtle","bytes","TextEncoder","encode","hash","digest","Uint8Array","nodeCrypto","createHash","Error","Promise","resolve","update","error","console","log"],"sources":["cryptoClients/sha256.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAAA,QAAA,GAAAC,OAAA;AAEA,SAAgBC,UAAUA,CAACC,KAA0B;EACnD,OAAO,IAAAH,QAAA,CAAAI,MAAM,EAACD,KAAK,CAAC;AACtB;AAFAE,OAAA,CAAAH,UAAA,GAAAA,UAAA;AAIA,SAAsBI,eAAeA,CAACH,KAA0B;;IAC9D,IAAI;MACF,MAAMI,uBAAuB,GAC3B,OAAOC,MAAM,KAAK,WAAW,IAAI,OAAOA,MAAM,CAACC,MAAM,KAAK,WAAW;MACvE,IAAIF,uBAAuB,EAAE;QAC3B;QACA,MAAMG,KAAK,GAAG,OAAOP,KAAK,KAAK,QAAQ,GAAG,IAAIQ,WAAW,EAAE,CAACC,MAAM,CAACT,KAAK,CAAC,GAAGA,KAAK;QACjF,MAAMU,IAAI,GAAG,MAAML,MAAM,CAACC,MAAM,CAACK,MAAM,CAAC,SAAS,EAAEJ,KAAK,CAAC;QACzD,OAAO,IAAIK,UAAU,CAACF,IAAI,CAAC;OAC5B,MAAM;QACL;QACA,MAAMG,UAAU,GAAGf,OAAO,CAAC,QAAQ,CAA4B;QAC/D,IAAI,CAACe,UAAU,CAACC,UAAU,EAAE;UAC1B,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;;QAElE,OAAOC,OAAO,CAACC,OAAO,CAACJ,UAAU,CAACC,UAAU,CAAC,QAAQ,CAAC,CAACI,MAAM,CAAClB,KAAK,CAAC,CAACW,MAAM,EAAE,CAAC;;KAEjF,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClBC,OAAO,CAACC,GAAG,CACT,2EAA2E,GACzE,6EAA6E,GAC7E,oCAAoC,CACvC;MACD,OAAOL,OAAO,CAACC,OAAO,CAAClB,UAAU,CAACC,KAAK,CAAC,CAAC;;EAE7C,CAAC;;AA1BDE,OAAA,CAAAC,eAAA,GAAAA,eAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}