{"ast":null,"code":"import { asyncToGenerator as _asyncToGenerator, regeneratorRuntime as _regeneratorRuntime, extends as _extends, objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport { createUnsecuredToken, TokenSigner } from 'jsontokens';\nimport { getStacksProvider } from '../utils.esm.js';\nimport { bytesToHex } from '@stacks/common';\nimport { serializeCV } from '@stacks/transactions';\nimport { hasAppPrivateKey, getKeys } from '../transactions/index.esm.js';\nimport { getDefaultSignatureRequestOptions } from './index.esm.js';\nvar _excluded = [\"userSession\"];\nfunction generateTokenAndOpenPopup(_x, _x2) {\n  return _generateTokenAndOpenPopup.apply(this, arguments);\n}\nfunction _generateTokenAndOpenPopup() {\n  _generateTokenAndOpenPopup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(options, makeTokenFn) {\n    var token;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return makeTokenFn(_extends({}, getDefaultSignatureRequestOptions(options), options));\n        case 2:\n          token = _context.sent;\n          return _context.abrupt(\"return\", openStructuredDataSignaturePopup({\n            token: token,\n            options: options\n          }));\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _generateTokenAndOpenPopup.apply(this, arguments);\n}\nfunction parseUnserializableBigIntValues(payload) {\n  return _extends({}, payload, {\n    message: bytesToHex(serializeCV(payload.message)),\n    domain: bytesToHex(serializeCV(payload.domain))\n  });\n}\nfunction signPayload(_x3, _x4) {\n  return _signPayload.apply(this, arguments);\n}\nfunction _signPayload() {\n  _signPayload = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(payload, privateKey) {\n    var tokenSigner;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          tokenSigner = new TokenSigner(\"ES256k\", privateKey);\n          return _context2.abrupt(\"return\", tokenSigner.signAsync(parseUnserializableBigIntValues(payload)));\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _signPayload.apply(this, arguments);\n}\nfunction signStructuredMessage(_x5) {\n  return _signStructuredMessage.apply(this, arguments);\n}\nfunction _signStructuredMessage() {\n  _signStructuredMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(options) {\n    var userSession, _options, _getKeys, privateKey, publicKey, payload;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          userSession = options.userSession, _options = _objectWithoutPropertiesLoose(options, _excluded);\n          if (!hasAppPrivateKey(userSession)) {\n            _context3.next = 5;\n            break;\n          }\n          _getKeys = getKeys(userSession), privateKey = _getKeys.privateKey, publicKey = _getKeys.publicKey;\n          payload = _extends({}, _options, {\n            publicKey: publicKey\n          });\n          return _context3.abrupt(\"return\", signPayload(payload, privateKey));\n        case 5:\n          return _context3.abrupt(\"return\", createUnsecuredToken(parseUnserializableBigIntValues(options)));\n        case 6:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _signStructuredMessage.apply(this, arguments);\n}\nfunction openStructuredDataSignaturePopup(_x6) {\n  return _openStructuredDataSignaturePopup.apply(this, arguments);\n}\nfunction _openStructuredDataSignaturePopup() {\n  _openStructuredDataSignaturePopup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(_ref) {\n    var token, options, provider, signatureResponse;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          token = _ref.token, options = _ref.options;\n          provider = getStacksProvider();\n          if (provider) {\n            _context4.next = 4;\n            break;\n          }\n          throw new Error(\"Hiro Wallet not installed.\");\n        case 4:\n          _context4.prev = 4;\n          _context4.next = 7;\n          return provider.structuredDataSignatureRequest(token);\n        case 7:\n          signatureResponse = _context4.sent;\n          options.onFinish == null ? void 0 : options.onFinish(signatureResponse);\n          _context4.next = 15;\n          break;\n        case 11:\n          _context4.prev = 11;\n          _context4.t0 = _context4[\"catch\"](4);\n          console.error(\"[Connect] Error during signature request\", _context4.t0);\n          options.onCancel == null ? void 0 : options.onCancel();\n        case 15:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4, null, [[4, 11]]);\n  }));\n  return _openStructuredDataSignaturePopup.apply(this, arguments);\n}\nfunction openStructuredDataSignatureRequestPopup(options) {\n  return generateTokenAndOpenPopup(options, signStructuredMessage);\n}\nexport { openStructuredDataSignatureRequestPopup, signStructuredMessage };","map":{"version":3,"names":["_callee","options","makeTokenFn","_extends","getDefaultSignatureRequestOptions","token","_context","sent","openStructuredDataSignaturePopup","parseUnserializableBigIntValues","payload","message","bytesToHex","serializeCV","domain","_callee2","privateKey","tokenSigner","TokenSigner","signAsync","userSession","_options","_objectWithoutPropertiesLoose","_excluded","hasAppPrivateKey","getKeys","_getKeys","publicKey","signPayload","createUnsecuredToken","_callee4","_ref","provider","signatureResponse","_regeneratorRuntime","wrap","_callee4$","_context4","prev","next","getStacksProvider","Error","structuredDataSignatureRequest","onFinish","error","t0","onCancel","generateTokenAndOpenPopup","signStructuredMessage"],"sources":["C:\\Users\\abasi\\Desktop\\web3-apps\\react-cra\\node_modules\\@stacks\\connect-react\\node_modules\\@stacks\\connect\\src\\signature\\structuredData.ts"],"sourcesContent":["import { bytesToHex } from '@stacks/common';\nimport { serializeCV } from '@stacks/transactions';\nimport { createUnsecuredToken, TokenSigner } from 'jsontokens';\nimport { getDefaultSignatureRequestOptions } from '.';\nimport { getKeys, hasAppPrivateKey } from '../transactions';\nimport {\n  StructuredDataSignatureOptions,\n  StructuredDataSignaturePayload,\n  StructuredDataSignaturePopup,\n  StructuredDataSignatureRequestOptions,\n} from '../types/structuredDataSignature';\nimport { getStacksProvider } from '../utils';\n\nasync function generateTokenAndOpenPopup<T extends StructuredDataSignatureOptions>(\n  options: T,\n  makeTokenFn: (options: T) => Promise<string>\n) {\n  const token = await makeTokenFn({\n    ...getDefaultSignatureRequestOptions(options),\n    ...options,\n  } as T);\n  return openStructuredDataSignaturePopup({ token, options });\n}\n\nfunction parseUnserializableBigIntValues(payload: any) {\n  return {\n    ...payload,\n    message: bytesToHex(serializeCV(payload.message)),\n    domain: bytesToHex(serializeCV(payload.domain)),\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/require-await\nasync function signPayload(payload: StructuredDataSignaturePayload, privateKey: string) {\n  const tokenSigner = new TokenSigner('ES256k', privateKey);\n  return tokenSigner.signAsync(parseUnserializableBigIntValues(payload));\n}\n\n// eslint-disable-next-line @typescript-eslint/require-await\nexport async function signStructuredMessage(options: StructuredDataSignatureRequestOptions) {\n  const { userSession, ..._options } = options;\n  if (hasAppPrivateKey(userSession)) {\n    const { privateKey, publicKey } = getKeys(userSession);\n    const payload: StructuredDataSignaturePayload = {\n      ..._options,\n      publicKey,\n    };\n    return signPayload(payload, privateKey);\n  }\n  // Type casting `any` as payload contains non-serialisable content,\n  // such as `StacksNetwork`\n  return createUnsecuredToken(parseUnserializableBigIntValues(options));\n}\n\nasync function openStructuredDataSignaturePopup({ token, options }: StructuredDataSignaturePopup) {\n  const provider = getStacksProvider();\n  if (!provider) {\n    throw new Error('Hiro Wallet not installed.');\n  }\n\n  try {\n    const signatureResponse = await provider.structuredDataSignatureRequest(token);\n\n    options.onFinish?.(signatureResponse);\n  } catch (error) {\n    console.error('[Connect] Error during signature request', error);\n    options.onCancel?.();\n  }\n}\n\nexport function openStructuredDataSignatureRequestPopup(\n  options: StructuredDataSignatureRequestOptions\n) {\n  return generateTokenAndOpenPopup(options, signStructuredMessage);\n}\n"],"mappings":";;;;;;;;;;;;0FAaA,SAAAA,QACEC,OAAA,EACAC,WAAA;;;;;;iBAEoBA,WAAA,CAAAC,QAAA,KACfC,iCAAA,CAAkCH,OAAA,GAClCA,OAAA;;UAFCI,KAAA,GAAAC,QAAA,CAAAC,IAAA;2CAICC,gCAAA,CAAiC;YAAEH,KAAA,EAAAA,KAAA;YAAOJ,OAAA,EAAAA;;;;;;;;;;AAGnD,SAAAQ,gCAAyCC,OAAA,EAAc;sBAEhDA,OAAA;IACHC,OAAA,EAASC,UAAA,CAAWC,WAAA,CAAYH,OAAA,CAAQC,OAAA;IACxCG,MAAA,EAAQF,UAAA,CAAWC,WAAA,CAAYH,OAAA,CAAQI,MAAA;;AAAA;;;;;4EAK3C,SAAAC,SAA2BL,OAAA,EAAyCM,UAAA;;;;;UAC5DC,WAAA,GAAc,IAAIC,WAAA,CAAY,UAAUF,UAAA;4CACvCC,WAAA,CAAYE,SAAA,CAAUV,+BAAA,CAAgCC,OAAA;;;;;;;;;;;;;wGAInBT,OAAA;;;;;UAClCmB,WAAA,GAA6BnB,OAAA,CAA7BmB,WAAA,EAAgBC,QAAA,GAAAC,6BAAA,CAAarB,OAAA,EAAAsB,SAAA;eACjCC,gBAAA,CAAiBJ,WAAA;;;;qBACeK,OAAA,CAAQL,WAAA,GAAlCJ,UAAA,GAAAU,QAAA,CAAAV,UAAA,EAAYW,SAAA,GAAAD,QAAA,CAAAC,SAAA;UACdjB,OAAA,GAAAP,QAAA,KACDkB,QAAA;YACHM,SAAA,EAAAA;;4CAEKC,WAAA,CAAYlB,OAAA,EAASM,UAAA;;4CAIvBa,oBAAA,CAAqBpB,+BAAA,CAAgCR,OAAA;;;;;;;;;;;;;iGAG9D,SAAA6B,SAAAC,IAAA;IAAA,IAAA1B,KAAA,EAAAJ,OAAA,EAAA+B,QAAA,EAAAC,iBAAA;IAAA,OAAAC,mBAAA,GAAAC,IAAA,UAAAC,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAC,IAAA,GAAAD,SAAA,CAAAE,IAAA;QAAA;UAAkDlC,KAAA,GAAA0B,IAAA,CAAA1B,KAAA,EAAOJ,OAAA,GAAA8B,IAAA,CAAA9B,OAAA;UACjD+B,QAAA,GAAWQ,iBAAA;cACZR,QAAA;;;;gBACG,IAAIS,KAAA,CAAM;;;;iBAIgBT,QAAA,CAASU,8BAAA,CAA+BrC,KAAA;;UAAlE4B,iBAAA,GAAAI,SAAA,CAAA9B,IAAA;kBAEEoC,QAAA,oBAAA1C,OAAA,CAAA0C,QAAA,CAAWV,iBAAA;;;;;;kBAEXW,KAAA,CAAM,4CAAAP,SAAA,CAAAQ,EAAA;kBACNC,QAAA,oBAAA7C,OAAA,CAAA6C,QAAA;;;;;;;;;iDAKV7C,OAAA,EACA;SACO8C,yBAAA,CAA0B9C,OAAA,EAAS+C,qBAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}