{"ast":null,"code":"import React, { createContext, useReducer } from 'react';\nimport { extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';\nvar States;\n(function (States2) {\n  States2[\"UPDATE_AUTH_OPTIONS\"] = \"data/update-auth-options\";\n})(States || (States = {}));\nvar initialState = {\n  isOpen: false,\n  isAuthenticating: false,\n  authData: void 0,\n  userSession: void 0,\n  authOptions: {\n    redirectTo: \"\",\n    manifestPath: \"\",\n    onFinish: function onFinish() {\n      return null;\n    },\n    authOrigin: void 0,\n    sendToSignIn: false,\n    appDetails: {\n      name: \"\",\n      icon: \"\"\n    }\n  }\n};\nvar connectReducer = function connectReducer(state, _ref) {\n  var type = _ref.type,\n    payload = _ref.payload;\n  switch (type) {\n    case States.UPDATE_AUTH_OPTIONS:\n      {\n        return _extends({}, state, {\n          authOptions: _extends({}, state.authOptions, payload)\n        });\n      }\n    default:\n      {\n        throw new Error(\"Unhandled action type: \" + type);\n      }\n  }\n};\nvar ConnectContext = /*#__PURE__*/createContext(initialState);\nvar ConnectDispatchContext = /*#__PURE__*/createContext(void 0);\nvar ConnectProvider = function ConnectProvider(_ref2) {\n  var authOptions = _ref2.authOptions,\n    children = _ref2.children;\n  var _useReducer = useReducer(connectReducer, initialState),\n    state = _useReducer[0],\n    dispatch = _useReducer[1];\n  return /* @__PURE__ */React.createElement(ConnectContext.Provider, {\n    value: _extends({}, state, {\n      authOptions: authOptions\n    })\n  }, /* @__PURE__ */React.createElement(ConnectDispatchContext.Provider, {\n    value: dispatch\n  }, children));\n};\nexport { ConnectContext, ConnectDispatchContext, ConnectProvider, States, connectReducer, initialState };","map":{"version":3,"names":["States","States2","initialState","isOpen","isAuthenticating","authData","userSession","authOptions","redirectTo","manifestPath","onFinish","authOrigin","sendToSignIn","appDetails","name","icon","connectReducer","state","_ref","type","payload","UPDATE_AUTH_OPTIONS","_extends","Error","ConnectContext","createContext","ConnectDispatchContext","ConnectProvider","_ref2","children","useReducer","_useReducer","dispatch","Provider","value"],"sources":["C:\\Users\\abasi\\Desktop\\web3-apps\\react-cra\\node_modules\\@stacks\\connect-react\\src\\react\\components\\connect\\context.tsx"],"sourcesContent":["import React, { useReducer, createContext } from 'react';\nimport { AuthOptions, FinishedAuthData, UserSession } from '@stacks/connect';\n\nenum States {\n  UPDATE_AUTH_OPTIONS = 'data/update-auth-options',\n}\n\ntype Action = { type: string; payload?: any };\n\ntype Dispatch = (action: Action) => void;\n\ntype State = {\n  isOpen: boolean;\n  isAuthenticating: boolean;\n  authData?: FinishedAuthData;\n  authOptions: AuthOptions;\n  userSession?: UserSession;\n};\n\nconst initialState: State = {\n  isOpen: false,\n  isAuthenticating: false,\n  authData: undefined,\n  userSession: undefined,\n  authOptions: {\n    redirectTo: '',\n    manifestPath: '',\n    onFinish: () => null,\n    authOrigin: undefined,\n    sendToSignIn: false,\n    appDetails: {\n      name: '',\n      icon: '',\n    },\n  },\n};\n\nconst connectReducer = (state: State, { type, payload }: { type: string; payload?: any }) => {\n  switch (type) {\n    case States.UPDATE_AUTH_OPTIONS: {\n      return {\n        ...state,\n        authOptions: {\n          ...state.authOptions,\n          ...payload,\n        },\n      };\n    }\n\n    default: {\n      throw new Error(`Unhandled action type: ${type}`);\n    }\n  }\n};\n\nconst ConnectContext = createContext<State>(initialState);\n\nconst ConnectDispatchContext = createContext<Dispatch | undefined>(undefined);\n\nconst ConnectProvider = ({\n  authOptions,\n  children,\n}: {\n  authOptions: AuthOptions;\n  children: any;\n}) => {\n  const [state, dispatch] = useReducer(connectReducer, initialState);\n\n  return (\n    <ConnectContext.Provider value={{ ...state, authOptions }}>\n      <ConnectDispatchContext.Provider value={dispatch}>{children}</ConnectDispatchContext.Provider>\n    </ConnectContext.Provider>\n  );\n};\n\nexport {\n  initialState,\n  connectReducer,\n  ConnectContext,\n  ConnectDispatchContext,\n  ConnectProvider,\n  States,\n};\n"],"mappings":";;IAGKA,MAAA;AAAL,WAAKC,OAAA,EAAL;mCACwB;AAAA,GADnBD,MAAA,KAAAA,MAAA;IAgBCE,YAAA,GAAsB;EAC1BC,MAAA,EAAQ;EACRC,gBAAA,EAAkB;EAClBC,QAAA,EAAU;EACVC,WAAA,EAAa;EACbC,WAAA,EAAa;IACXC,UAAA,EAAY;IACZC,YAAA,EAAc;IACdC,QAAA,EAAU,SAAAA,SAAA;MAAA,OAAM;;IAChBC,UAAA,EAAY;IACZC,YAAA,EAAc;IACdC,UAAA,EAAY;MACVC,IAAA,EAAM;MACNC,IAAA,EAAM;;;AAAA;IAKNC,cAAA,GAAiB,SAAjBA,eAAkBC,KAAA,EAAAC,IAAA,EAAqE;EAAA,IAArDC,IAAA,GAAAD,IAAA,CAAAC,IAAA;IAAMC,OAAA,GAAAF,IAAA,CAAAE,OAAA;UACpCD,IAAA;SACDnB,MAAA,CAAOqB,mBAAA;MAAqB;4BAE1BJ,KAAA;UACHV,WAAA,EAAAe,QAAA,KACKL,KAAA,CAAMV,WAAA,EACNa,OAAA;;;;MAKA;cACD,IAAIG,KAAA,6BAAgCJ,IAAA;;;AAAA;IAK1CK,cAAA,gBAAiBC,aAAA,CAAqBvB,YAAA;IAEtCwB,sBAAA,gBAAyBD,aAAA,CAAoC;IAE7DE,eAAA,GAAkB,SAAlBA,gBAAAC,KAAA,EAMA;EAAA,IALJrB,WAAA,GAAAqB,KAAA,CAAArB,WAAA;IACAsB,QAAA,GAAAD,KAAA,CAAAC,QAAA;oBAK0BC,UAAA,CAAWd,cAAA,EAAgBd,YAAA;IAA9Ce,KAAA,GAAAc,WAAA;IAAOC,QAAA,GAAAD,WAAA;4CAGXP,cAAA,CAAeS,QAAA,EAAhB;IAAyBC,KAAA,EAAAZ,QAAA,KAAYL,KAAA;MAAOV,WAAA,EAAAA;;wCACzCmB,sBAAA,CAAuBO,QAAA,EAAxB;IAAiCC,KAAA,EAAOF;KAAWH,QAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}