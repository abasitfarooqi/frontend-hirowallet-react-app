{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hmac = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// HMAC (RFC 2104)\nclass HMAC extends utils_js_1.Hash {\n  constructor(hash, _key) {\n    super();\n    this.finished = false;\n    this.destroyed = false;\n    _assert_js_1.default.hash(hash);\n    const key = (0, utils_js_1.toBytes)(_key);\n    this.iHash = hash.create();\n    if (typeof this.iHash.update !== 'function') throw new TypeError('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create();\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf) {\n    _assert_js_1.default.exists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out) {\n    _assert_js_1.default.exists(this);\n    _assert_js_1.default.bytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to) {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to || (to = Object.create(Object.getPrototypeOf(this), {}));\n    const {\n      oHash,\n      iHash,\n      finished,\n      destroyed,\n      blockLen,\n      outputLen\n    } = this;\n    to = to;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nexports.hmac = hmac;\nexports.hmac.create = (hash, key) => new HMAC(hash, key);","map":{"version":3,"names":["Object","defineProperty","exports","value","hmac","_assert_js_1","require","utils_js_1","HMAC","Hash","constructor","hash","_key","finished","destroyed","default","key","toBytes","iHash","create","update","TypeError","blockLen","outputLen","pad","Uint8Array","set","length","digest","i","oHash","fill","buf","exists","digestInto","out","bytes","destroy","_cloneInto","to","getPrototypeOf","message"],"sources":["C:/Users/abasi/Desktop/web3-apps/react-cra/node_modules/@noble/hashes/hmac.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// HMAC (RFC 2104)\nclass HMAC extends utils_js_1.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        _assert_js_1.default.hash(hash);\n        const key = (0, utils_js_1.toBytes)(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        _assert_js_1.default.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nexports.hmac = hmac;\nexports.hmac.create = (hash, key) => new HMAC(hash, key);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}