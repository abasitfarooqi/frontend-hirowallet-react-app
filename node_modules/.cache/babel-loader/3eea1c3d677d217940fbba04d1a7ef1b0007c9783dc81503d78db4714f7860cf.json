{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TokenVerifier = void 0;\nconst base64url = require(\"./base64Url\");\nconst cryptoClients_1 = require(\"./cryptoClients\");\nconst errors_1 = require(\"./errors\");\nconst sha256_1 = require(\"./cryptoClients/sha256\");\nclass TokenVerifier {\n  constructor(signingAlgorithm, rawPublicKey) {\n    if (!(signingAlgorithm && rawPublicKey)) {\n      throw new errors_1.MissingParametersError('a signing algorithm and public key are required');\n    }\n    if (typeof signingAlgorithm !== 'string') {\n      throw 'signing algorithm parameter must be a string';\n    }\n    signingAlgorithm = signingAlgorithm.toUpperCase();\n    if (!cryptoClients_1.cryptoClients.hasOwnProperty(signingAlgorithm)) {\n      throw 'invalid signing algorithm';\n    }\n    this.tokenType = 'JWT';\n    this.cryptoClient = cryptoClients_1.cryptoClients[signingAlgorithm];\n    this.rawPublicKey = rawPublicKey;\n  }\n  verify(token) {\n    if (typeof token === 'string') {\n      return this.verifyCompact(token, false);\n    } else if (typeof token === 'object') {\n      return this.verifyExpanded(token, false);\n    } else {\n      return false;\n    }\n  }\n  verifyAsync(token) {\n    if (typeof token === 'string') {\n      return this.verifyCompact(token, true);\n    } else if (typeof token === 'object') {\n      return this.verifyExpanded(token, true);\n    } else {\n      return Promise.resolve(false);\n    }\n  }\n  verifyCompact(token, async) {\n    // decompose the token into parts\n    const tokenParts = token.split('.');\n    // calculate the signing input hash\n    const signingInput = tokenParts[0] + '.' + tokenParts[1];\n    const performVerify = signingInputHash => {\n      // extract the signature as a DER array\n      const derSignatureBytes = this.cryptoClient.loadSignature(tokenParts[2]);\n      // verify the signed hash\n      return this.cryptoClient.verifyHash(signingInputHash, derSignatureBytes, this.rawPublicKey);\n    };\n    if (async) {\n      return (0, sha256_1.hashSha256Async)(signingInput).then(signingInputHash => performVerify(signingInputHash));\n    } else {\n      const signingInputHash = (0, sha256_1.hashSha256)(signingInput);\n      return performVerify(signingInputHash);\n    }\n  }\n  verifyExpanded(token, async) {\n    const signingInput = [token['header'].join('.'), base64url.encode(token['payload'])].join('.');\n    let verified = true;\n    const performVerify = signingInputHash => {\n      token['signature'].map(signature => {\n        const derSignatureBytes = this.cryptoClient.loadSignature(signature);\n        const signatureVerified = this.cryptoClient.verifyHash(signingInputHash, derSignatureBytes, this.rawPublicKey);\n        if (!signatureVerified) {\n          verified = false;\n        }\n      });\n      return verified;\n    };\n    if (async) {\n      return (0, sha256_1.hashSha256Async)(signingInput).then(signingInputHash => performVerify(signingInputHash));\n    } else {\n      const signingInputHash = (0, sha256_1.hashSha256)(signingInput);\n      return performVerify(signingInputHash);\n    }\n  }\n}\nexports.TokenVerifier = TokenVerifier;","map":{"version":3,"names":["base64url","require","cryptoClients_1","errors_1","sha256_1","TokenVerifier","constructor","signingAlgorithm","rawPublicKey","MissingParametersError","toUpperCase","cryptoClients","hasOwnProperty","tokenType","cryptoClient","verify","token","verifyCompact","verifyExpanded","verifyAsync","Promise","resolve","async","tokenParts","split","signingInput","performVerify","signingInputHash","derSignatureBytes","loadSignature","verifyHash","hashSha256Async","then","hashSha256","join","encode","verified","map","signature","signatureVerified","exports"],"sources":["verifier.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,MAAAA,SAAA,GAAAC,OAAA;AACA,MAAAC,eAAA,GAAAD,OAAA;AACA,MAAAE,QAAA,GAAAF,OAAA;AAEA,MAAAG,QAAA,GAAAH,OAAA;AAEA,MAAaI,aAAa;EAKxBC,YAAYC,gBAAwB,EAAEC,YAAoB;IACxD,IAAI,EAAED,gBAAgB,IAAIC,YAAY,CAAC,EAAE;MACvC,MAAM,IAAIL,QAAA,CAAAM,sBAAsB,CAAC,iDAAiD,CAAC;;IAErF,IAAI,OAAOF,gBAAgB,KAAK,QAAQ,EAAE;MACxC,MAAM,8CAA8C;;IAEtDA,gBAAgB,GAAGA,gBAAgB,CAACG,WAAW,EAAE;IACjD,IAAI,CAACR,eAAA,CAAAS,aAAa,CAACC,cAAc,CAACL,gBAAgB,CAAC,EAAE;MACnD,MAAM,2BAA2B;;IAEnC,IAAI,CAACM,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,YAAY,GAAGZ,eAAA,CAAAS,aAAa,CAACJ,gBAAgB,CAAC;IACnD,IAAI,CAACC,YAAY,GAAGA,YAAY;EAClC;EAEAO,MAAMA,CAACC,KAA2B;IAChC,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC7B,OAAO,IAAI,CAACC,aAAa,CAACD,KAAK,EAAE,KAAK,CAAC;KACxC,MAAM,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MACpC,OAAO,IAAI,CAACE,cAAc,CAACF,KAAK,EAAE,KAAK,CAAC;KACzC,MAAM;MACL,OAAO,KAAK;;EAEhB;EAEAG,WAAWA,CAACH,KAA2B;IACrC,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC7B,OAAO,IAAI,CAACC,aAAa,CAACD,KAAK,EAAE,IAAI,CAAC;KACvC,MAAM,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MACpC,OAAO,IAAI,CAACE,cAAc,CAACF,KAAK,EAAE,IAAI,CAAC;KACxC,MAAM;MACL,OAAOI,OAAO,CAACC,OAAO,CAAC,KAAK,CAAC;;EAEjC;EAIAJ,aAAaA,CAACD,KAAa,EAAEM,KAAc;IACzC;IACA,MAAMC,UAAU,GAAGP,KAAK,CAACQ,KAAK,CAAC,GAAG,CAAC;IAEnC;IACA,MAAMC,YAAY,GAAGF,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGA,UAAU,CAAC,CAAC,CAAC;IAExD,MAAMG,aAAa,GAAIC,gBAA4B,IAAI;MACrD;MACA,MAAMC,iBAAiB,GAAG,IAAI,CAACd,YAAY,CAACe,aAAa,CAACN,UAAU,CAAC,CAAC,CAAC,CAAC;MAExE;MACA,OAAO,IAAI,CAACT,YAAY,CAACgB,UAAU,CAACH,gBAAgB,EAAEC,iBAAiB,EAAE,IAAI,CAACpB,YAAY,CAAC;IAC7F,CAAC;IAED,IAAIc,KAAK,EAAE;MACT,OAAO,IAAAlB,QAAA,CAAA2B,eAAe,EAACN,YAAY,CAAC,CAACO,IAAI,CAACL,gBAAgB,IACxDD,aAAa,CAACC,gBAAgB,CAAC,CAChC;KACF,MAAM;MACL,MAAMA,gBAAgB,GAAG,IAAAvB,QAAA,CAAA6B,UAAU,EAACR,YAAY,CAAC;MACjD,OAAOC,aAAa,CAACC,gBAAgB,CAAC;;EAE1C;EAIAT,cAAcA,CAACF,KAAkB,EAAEM,KAAc;IAC/C,MAAMG,YAAY,GAAG,CAACT,KAAK,CAAC,QAAQ,CAAC,CAACkB,IAAI,CAAC,GAAG,CAAC,EAAElC,SAAS,CAACmC,MAAM,CAACnB,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAACkB,IAAI,CAAC,GAAG,CAAC;IAC9F,IAAIE,QAAQ,GAAG,IAAI;IAEnB,MAAMV,aAAa,GAAIC,gBAA4B,IAAI;MACrDX,KAAK,CAAC,WAAW,CAAC,CAACqB,GAAG,CAAEC,SAAiB,IAAI;QAC3C,MAAMV,iBAAiB,GAAG,IAAI,CAACd,YAAY,CAACe,aAAa,CAACS,SAAS,CAAC;QACpE,MAAMC,iBAAiB,GAAG,IAAI,CAACzB,YAAY,CAACgB,UAAU,CACpDH,gBAAgB,EAChBC,iBAAiB,EACjB,IAAI,CAACpB,YAAY,CAClB;QACD,IAAI,CAAC+B,iBAAiB,EAAE;UACtBH,QAAQ,GAAG,KAAK;;MAEpB,CAAC,CAAC;MACF,OAAOA,QAAQ;IACjB,CAAC;IAED,IAAId,KAAK,EAAE;MACT,OAAO,IAAAlB,QAAA,CAAA2B,eAAe,EAACN,YAAY,CAAC,CAACO,IAAI,CAACL,gBAAgB,IACxDD,aAAa,CAACC,gBAAgB,CAAC,CAChC;KACF,MAAM;MACL,MAAMA,gBAAgB,GAAG,IAAAvB,QAAA,CAAA6B,UAAU,EAACR,YAAY,CAAC;MACjD,OAAOC,aAAa,CAACC,gBAAgB,CAAC;;EAE1C;;AAjGFa,OAAA,CAAAnC,aAAA,GAAAA,aAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}