{"ast":null,"code":"export const ERROR_CODES = {\n  MISSING_PARAMETER: 'missing_parameter',\n  REMOTE_SERVICE_ERROR: 'remote_service_error',\n  INVALID_STATE: 'invalid_state',\n  NO_SESSION_DATA: 'no_session_data',\n  DOES_NOT_EXIST: 'does_not_exist',\n  FAILED_DECRYPTION_ERROR: 'failed_decryption_error',\n  INVALID_DID_ERROR: 'invalid_did_error',\n  NOT_ENOUGH_FUNDS_ERROR: 'not_enough_error',\n  INVALID_AMOUNT_ERROR: 'invalid_amount_error',\n  LOGIN_FAILED_ERROR: 'login_failed',\n  SIGNATURE_VERIFICATION_ERROR: 'signature_verification_failure',\n  CONFLICT_ERROR: 'conflict_error',\n  NOT_ENOUGH_PROOF_ERROR: 'not_enough_proof_error',\n  BAD_PATH_ERROR: 'bad_path_error',\n  VALIDATION_ERROR: 'validation_error',\n  PAYLOAD_TOO_LARGE_ERROR: 'payload_too_large_error',\n  PRECONDITION_FAILED_ERROR: 'precondition_failed_error',\n  UNKNOWN: 'unknown'\n};\nObject.freeze(ERROR_CODES);\nexport class BlockstackError extends Error {\n  constructor(error) {\n    super();\n    let message = error.message;\n    let bugDetails = `Error Code: ${error.code}`;\n    let stack = this.stack;\n    if (!stack) {\n      try {\n        throw new Error();\n      } catch (e) {\n        stack = e.stack;\n      }\n    } else {\n      bugDetails += `Stack Trace:\\n${stack}`;\n    }\n    message += `\\nIf you believe this exception is caused by a bug in stacks.js,\n      please file a bug report: https://github.com/blockstack/stacks.js/issues\\n\\n${bugDetails}`;\n    this.message = message;\n    this.code = error.code;\n    this.parameter = error.parameter ? error.parameter : undefined;\n  }\n  toString() {\n    return `${super.toString()}\n    code: ${this.code} param: ${this.parameter ? this.parameter : 'n/a'}`;\n  }\n}\nexport class InvalidParameterError extends BlockstackError {\n  constructor(parameter) {\n    let message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    super({\n      code: ERROR_CODES.MISSING_PARAMETER,\n      message,\n      parameter\n    });\n    this.name = 'MissingParametersError';\n  }\n}\nexport class MissingParameterError extends BlockstackError {\n  constructor(parameter) {\n    let message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    super({\n      code: ERROR_CODES.MISSING_PARAMETER,\n      message,\n      parameter\n    });\n    this.name = 'MissingParametersError';\n  }\n}\nexport class RemoteServiceError extends BlockstackError {\n  constructor(response) {\n    let message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    super({\n      code: ERROR_CODES.REMOTE_SERVICE_ERROR,\n      message\n    });\n    this.response = response;\n  }\n}\nexport class InvalidDIDError extends BlockstackError {\n  constructor() {\n    let message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    super({\n      code: ERROR_CODES.INVALID_DID_ERROR,\n      message\n    });\n    this.name = 'InvalidDIDError';\n  }\n}\nexport class NotEnoughFundsError extends BlockstackError {\n  constructor(leftToFund) {\n    const message = `Not enough UTXOs to fund. Left to fund: ${leftToFund}`;\n    super({\n      code: ERROR_CODES.NOT_ENOUGH_FUNDS_ERROR,\n      message\n    });\n    this.leftToFund = leftToFund;\n    this.name = 'NotEnoughFundsError';\n    this.message = message;\n  }\n}\nexport class InvalidAmountError extends BlockstackError {\n  constructor(fees, specifiedAmount) {\n    const message = `Not enough coin to fund fees transaction fees. Fees would be ${fees},` + ` specified spend is  ${specifiedAmount}`;\n    super({\n      code: ERROR_CODES.INVALID_AMOUNT_ERROR,\n      message\n    });\n    this.specifiedAmount = specifiedAmount;\n    this.fees = fees;\n    this.name = 'InvalidAmountError';\n    this.message = message;\n  }\n}\nexport class LoginFailedError extends BlockstackError {\n  constructor(reason) {\n    const message = `Failed to login: ${reason}`;\n    super({\n      code: ERROR_CODES.LOGIN_FAILED_ERROR,\n      message\n    });\n    this.message = message;\n    this.name = 'LoginFailedError';\n  }\n}\nexport class SignatureVerificationError extends BlockstackError {\n  constructor(reason) {\n    const message = `Failed to verify signature: ${reason}`;\n    super({\n      code: ERROR_CODES.SIGNATURE_VERIFICATION_ERROR,\n      message\n    });\n    this.message = message;\n    this.name = 'SignatureVerificationError';\n  }\n}\nexport class FailedDecryptionError extends BlockstackError {\n  constructor() {\n    let message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Unable to decrypt cipher object.';\n    super({\n      code: ERROR_CODES.FAILED_DECRYPTION_ERROR,\n      message\n    });\n    this.message = message;\n    this.name = 'FailedDecryptionError';\n  }\n}\nexport class InvalidStateError extends BlockstackError {\n  constructor(message) {\n    super({\n      code: ERROR_CODES.INVALID_STATE,\n      message\n    });\n    this.message = message;\n    this.name = 'InvalidStateError';\n  }\n}\nexport class NoSessionDataError extends BlockstackError {\n  constructor(message) {\n    super({\n      code: ERROR_CODES.INVALID_STATE,\n      message\n    });\n    this.message = message;\n    this.name = 'NoSessionDataError';\n  }\n}\nexport class GaiaHubError extends BlockstackError {\n  constructor(error, response) {\n    super(error);\n    if (response) {\n      this.hubError = {\n        statusCode: response.status,\n        statusText: response.statusText\n      };\n      if (typeof response.body === 'string') {\n        this.hubError.message = response.body;\n      } else if (typeof response.body === 'object') {\n        Object.assign(this.hubError, response.body);\n      }\n    }\n  }\n}\nexport class DoesNotExist extends GaiaHubError {\n  constructor(message, response) {\n    super({\n      message,\n      code: ERROR_CODES.DOES_NOT_EXIST\n    }, response);\n    this.name = 'DoesNotExist';\n  }\n}\nexport class ConflictError extends GaiaHubError {\n  constructor(message, response) {\n    super({\n      message,\n      code: ERROR_CODES.CONFLICT_ERROR\n    }, response);\n    this.name = 'ConflictError';\n  }\n}\nexport class NotEnoughProofError extends GaiaHubError {\n  constructor(message, response) {\n    super({\n      message,\n      code: ERROR_CODES.NOT_ENOUGH_PROOF_ERROR\n    }, response);\n    this.name = 'NotEnoughProofError';\n  }\n}\nexport class BadPathError extends GaiaHubError {\n  constructor(message, response) {\n    super({\n      message,\n      code: ERROR_CODES.BAD_PATH_ERROR\n    }, response);\n    this.name = 'BadPathError';\n  }\n}\nexport class ValidationError extends GaiaHubError {\n  constructor(message, response) {\n    super({\n      message,\n      code: ERROR_CODES.VALIDATION_ERROR\n    }, response);\n    this.name = 'ValidationError';\n  }\n}\nexport class PayloadTooLargeError extends GaiaHubError {\n  constructor(message, response, maxUploadByteSize) {\n    super({\n      message,\n      code: ERROR_CODES.PAYLOAD_TOO_LARGE_ERROR\n    }, response);\n    this.name = 'PayloadTooLargeError';\n    this.maxUploadByteSize = maxUploadByteSize;\n  }\n}\nexport class PreconditionFailedError extends GaiaHubError {\n  constructor(message, response) {\n    super({\n      message,\n      code: ERROR_CODES.PRECONDITION_FAILED_ERROR\n    }, response);\n    this.name = 'PreconditionFailedError';\n  }\n}","map":{"version":3,"names":["ERROR_CODES","MISSING_PARAMETER","REMOTE_SERVICE_ERROR","INVALID_STATE","NO_SESSION_DATA","DOES_NOT_EXIST","FAILED_DECRYPTION_ERROR","INVALID_DID_ERROR","NOT_ENOUGH_FUNDS_ERROR","INVALID_AMOUNT_ERROR","LOGIN_FAILED_ERROR","SIGNATURE_VERIFICATION_ERROR","CONFLICT_ERROR","NOT_ENOUGH_PROOF_ERROR","BAD_PATH_ERROR","VALIDATION_ERROR","PAYLOAD_TOO_LARGE_ERROR","PRECONDITION_FAILED_ERROR","UNKNOWN","Object","freeze","BlockstackError","Error","constructor","error","message","bugDetails","code","stack","e","parameter","undefined","toString","InvalidParameterError","arguments","length","name","MissingParameterError","RemoteServiceError","response","InvalidDIDError","NotEnoughFundsError","leftToFund","InvalidAmountError","fees","specifiedAmount","LoginFailedError","reason","SignatureVerificationError","FailedDecryptionError","InvalidStateError","NoSessionDataError","GaiaHubError","hubError","statusCode","status","statusText","body","assign","DoesNotExist","ConflictError","NotEnoughProofError","BadPathError","ValidationError","PayloadTooLargeError","maxUploadByteSize","PreconditionFailedError"],"sources":["C:\\Users\\abasi\\Desktop\\web3-apps\\react-cra\\node_modules\\@stacks\\common\\src\\errors.ts"],"sourcesContent":["/**\n * @ignore\n */\nexport const ERROR_CODES = {\n  MISSING_PARAMETER: 'missing_parameter',\n  REMOTE_SERVICE_ERROR: 'remote_service_error',\n  INVALID_STATE: 'invalid_state',\n  NO_SESSION_DATA: 'no_session_data',\n  DOES_NOT_EXIST: 'does_not_exist',\n  FAILED_DECRYPTION_ERROR: 'failed_decryption_error',\n  INVALID_DID_ERROR: 'invalid_did_error',\n  NOT_ENOUGH_FUNDS_ERROR: 'not_enough_error',\n  INVALID_AMOUNT_ERROR: 'invalid_amount_error',\n  LOGIN_FAILED_ERROR: 'login_failed',\n  SIGNATURE_VERIFICATION_ERROR: 'signature_verification_failure',\n  CONFLICT_ERROR: 'conflict_error',\n  NOT_ENOUGH_PROOF_ERROR: 'not_enough_proof_error',\n  BAD_PATH_ERROR: 'bad_path_error',\n  VALIDATION_ERROR: 'validation_error',\n  PAYLOAD_TOO_LARGE_ERROR: 'payload_too_large_error',\n  PRECONDITION_FAILED_ERROR: 'precondition_failed_error',\n  UNKNOWN: 'unknown',\n};\n\nObject.freeze(ERROR_CODES);\n\n/**\n * @ignore\n */\ntype ErrorData = {\n  code: string;\n  parameter?: string;\n  message: string;\n};\n\n/**\n * @ignore\n */\nexport class BlockstackError extends Error {\n  message: string;\n\n  code: string;\n\n  parameter?: string;\n\n  constructor(error: ErrorData) {\n    super();\n    let message = error.message;\n    let bugDetails = `Error Code: ${error.code}`;\n    let stack = this.stack;\n    if (!stack) {\n      try {\n        throw new Error();\n      } catch (e: any) {\n        stack = e.stack;\n      }\n    } else {\n      bugDetails += `Stack Trace:\\n${stack}`;\n    }\n    message += `\\nIf you believe this exception is caused by a bug in stacks.js,\n      please file a bug report: https://github.com/blockstack/stacks.js/issues\\n\\n${bugDetails}`;\n    this.message = message;\n    this.code = error.code;\n    this.parameter = error.parameter ? error.parameter : undefined;\n  }\n\n  toString() {\n    return `${super.toString()}\n    code: ${this.code} param: ${this.parameter ? this.parameter : 'n/a'}`;\n  }\n}\n\n/**\n * @ignore\n */\nexport class InvalidParameterError extends BlockstackError {\n  constructor(parameter: string, message: string = '') {\n    super({ code: ERROR_CODES.MISSING_PARAMETER, message, parameter });\n    this.name = 'MissingParametersError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class MissingParameterError extends BlockstackError {\n  constructor(parameter: string, message: string = '') {\n    super({ code: ERROR_CODES.MISSING_PARAMETER, message, parameter });\n    this.name = 'MissingParametersError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class RemoteServiceError extends BlockstackError {\n  response: Response;\n\n  constructor(response: Response, message: string = '') {\n    super({ code: ERROR_CODES.REMOTE_SERVICE_ERROR, message });\n    this.response = response;\n  }\n}\n\n/**\n * @ignore\n */\nexport class InvalidDIDError extends BlockstackError {\n  constructor(message: string = '') {\n    super({ code: ERROR_CODES.INVALID_DID_ERROR, message });\n    this.name = 'InvalidDIDError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class NotEnoughFundsError extends BlockstackError {\n  leftToFund: number;\n\n  constructor(leftToFund: number) {\n    const message = `Not enough UTXOs to fund. Left to fund: ${leftToFund}`;\n    super({ code: ERROR_CODES.NOT_ENOUGH_FUNDS_ERROR, message });\n    this.leftToFund = leftToFund;\n    this.name = 'NotEnoughFundsError';\n    this.message = message;\n  }\n}\n\n/**\n * @ignore\n */\nexport class InvalidAmountError extends BlockstackError {\n  fees: number;\n\n  specifiedAmount: number;\n\n  constructor(fees: number, specifiedAmount: number) {\n    const message =\n      `Not enough coin to fund fees transaction fees. Fees would be ${fees},` +\n      ` specified spend is  ${specifiedAmount}`;\n    super({ code: ERROR_CODES.INVALID_AMOUNT_ERROR, message });\n    this.specifiedAmount = specifiedAmount;\n    this.fees = fees;\n    this.name = 'InvalidAmountError';\n    this.message = message;\n  }\n}\n\n/**\n * @ignore\n */\nexport class LoginFailedError extends BlockstackError {\n  constructor(reason: string) {\n    const message = `Failed to login: ${reason}`;\n    super({ code: ERROR_CODES.LOGIN_FAILED_ERROR, message });\n    this.message = message;\n    this.name = 'LoginFailedError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class SignatureVerificationError extends BlockstackError {\n  constructor(reason: string) {\n    const message = `Failed to verify signature: ${reason}`;\n    super({ code: ERROR_CODES.SIGNATURE_VERIFICATION_ERROR, message });\n    this.message = message;\n    this.name = 'SignatureVerificationError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class FailedDecryptionError extends BlockstackError {\n  constructor(message: string = 'Unable to decrypt cipher object.') {\n    super({ code: ERROR_CODES.FAILED_DECRYPTION_ERROR, message });\n    this.message = message;\n    this.name = 'FailedDecryptionError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class InvalidStateError extends BlockstackError {\n  constructor(message: string) {\n    super({ code: ERROR_CODES.INVALID_STATE, message });\n    this.message = message;\n    this.name = 'InvalidStateError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class NoSessionDataError extends BlockstackError {\n  constructor(message: string) {\n    super({ code: ERROR_CODES.INVALID_STATE, message });\n    this.message = message;\n    this.name = 'NoSessionDataError';\n  }\n}\n\n/**\n * @ignore\n */\nexport interface GaiaHubErrorResponse {\n  status: number;\n  statusText: string;\n  body?: string | any;\n}\n\nexport interface HubErrorDetails {\n  message?: string;\n  statusCode: number;\n  statusText: string;\n  [prop: string]: any;\n}\n\n/**\n * @ignore\n */\nexport class GaiaHubError extends BlockstackError {\n  hubError?: HubErrorDetails;\n\n  constructor(error: ErrorData, response: GaiaHubErrorResponse) {\n    super(error);\n    if (response) {\n      this.hubError = {\n        statusCode: response.status,\n        statusText: response.statusText,\n      };\n      if (typeof response.body === 'string') {\n        this.hubError.message = response.body;\n      } else if (typeof response.body === 'object') {\n        Object.assign(this.hubError, response.body);\n      }\n    }\n  }\n}\n\n/**\n * @ignore\n */\nexport class DoesNotExist extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.DOES_NOT_EXIST }, response);\n    this.name = 'DoesNotExist';\n  }\n}\n\n/**\n * @ignore\n */\nexport class ConflictError extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.CONFLICT_ERROR }, response);\n    this.name = 'ConflictError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class NotEnoughProofError extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.NOT_ENOUGH_PROOF_ERROR }, response);\n    this.name = 'NotEnoughProofError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class BadPathError extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.BAD_PATH_ERROR }, response);\n    this.name = 'BadPathError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class ValidationError extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.VALIDATION_ERROR }, response);\n    this.name = 'ValidationError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class PayloadTooLargeError extends GaiaHubError {\n  /** Can be `null` when an oversized payload is detected client-side. */\n  hubError?: HubErrorDetails;\n\n  maxUploadByteSize: number;\n\n  constructor(message: string, response: GaiaHubErrorResponse | null, maxUploadByteSize: number) {\n    super({ message, code: ERROR_CODES.PAYLOAD_TOO_LARGE_ERROR }, response!);\n    this.name = 'PayloadTooLargeError';\n    this.maxUploadByteSize = maxUploadByteSize;\n  }\n}\n\n/**\n * @ignore\n */\nexport class PreconditionFailedError extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.PRECONDITION_FAILED_ERROR }, response);\n    this.name = 'PreconditionFailedError';\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}