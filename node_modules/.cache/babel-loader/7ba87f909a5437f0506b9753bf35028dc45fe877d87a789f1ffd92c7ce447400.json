{"ast":null,"code":"import { hexToInt } from './utils';\nconst COORDINATE_BYTES = 32;\nexport function parseRecoverableSignatureVrs(signature) {\n  if (signature.length < COORDINATE_BYTES * 2 * 2 + 1) {\n    throw new Error('Invalid signature');\n  }\n  const recoveryIdHex = signature.slice(0, 2);\n  const r = signature.slice(2, 2 + COORDINATE_BYTES * 2);\n  const s = signature.slice(2 + COORDINATE_BYTES * 2);\n  return {\n    recoveryId: hexToInt(recoveryIdHex),\n    r,\n    s\n  };\n}\nexport function signatureVrsToRsv(signature) {\n  return signature.slice(2) + signature.slice(0, 2);\n}\nexport function signatureRsvToVrs(signature) {\n  return signature.slice(-2) + signature.slice(0, -2);\n}","map":{"version":3,"names":["hexToInt","COORDINATE_BYTES","parseRecoverableSignatureVrs","signature","length","Error","recoveryIdHex","slice","r","s","recoveryId","signatureVrsToRsv","signatureRsvToVrs"],"sources":["C:\\Users\\abasi\\Desktop\\web3-apps\\react-cra\\node_modules\\@stacks\\common\\src\\signatures.ts"],"sourcesContent":["import { hexToInt } from './utils';\n\nconst COORDINATE_BYTES = 32;\n\n/** @ignore */\nexport function parseRecoverableSignatureVrs(signature: string) {\n  // todo: prefer RSV format or add format options of message signing functions\n  if (signature.length < COORDINATE_BYTES * 2 * 2 + 1) {\n    throw new Error('Invalid signature');\n  }\n  const recoveryIdHex = signature.slice(0, 2);\n  const r = signature.slice(2, 2 + COORDINATE_BYTES * 2);\n  const s = signature.slice(2 + COORDINATE_BYTES * 2);\n  return {\n    recoveryId: hexToInt(recoveryIdHex),\n    r,\n    s,\n  };\n}\n\n/** @ignore */\nexport function signatureVrsToRsv(signature: string) {\n  return signature.slice(2) + signature.slice(0, 2);\n}\n\n/** @ignore */\nexport function signatureRsvToVrs(signature: string) {\n  return signature.slice(-2) + signature.slice(0, -2);\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,SAAS;AAElC,MAAMC,gBAAgB,GAAG,EAAE;AAG3B,OAAM,SAAUC,4BAA4BA,CAACC,SAAiB;EAE5D,IAAIA,SAAS,CAACC,MAAM,GAAGH,gBAAgB,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;IACnD,MAAM,IAAII,KAAK,CAAC,mBAAmB,CAAC;;EAEtC,MAAMC,aAAa,GAAGH,SAAS,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3C,MAAMC,CAAC,GAAGL,SAAS,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,GAAGN,gBAAgB,GAAG,CAAC,CAAC;EACtD,MAAMQ,CAAC,GAAGN,SAAS,CAACI,KAAK,CAAC,CAAC,GAAGN,gBAAgB,GAAG,CAAC,CAAC;EACnD,OAAO;IACLS,UAAU,EAAEV,QAAQ,CAACM,aAAa,CAAC;IACnCE,CAAC;IACDC;GACD;AACH;AAGA,OAAM,SAAUE,iBAAiBA,CAACR,SAAiB;EACjD,OAAOA,SAAS,CAACI,KAAK,CAAC,CAAC,CAAC,GAAGJ,SAAS,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AACnD;AAGA,OAAM,SAAUK,iBAAiBA,CAACT,SAAiB;EACjD,OAAOA,SAAS,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGJ,SAAS,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACrD"},"metadata":{},"sourceType":"module","externalDependencies":[]}