{"ast":null,"code":"import { utils } from '@noble/secp256k1';\nexport const randomBytes = function () {\n  let bytesLength = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 32;\n  return utils.randomBytes(bytesLength);\n};","map":{"version":3,"names":["utils","randomBytes","bytesLength","arguments","length","undefined"],"sources":["C:\\Users\\abasi\\Desktop\\web3-apps\\react-cra\\node_modules\\@stacks\\encryption\\src\\cryptoRandom.ts"],"sourcesContent":["import { utils } from '@noble/secp256k1';\n\n/**\n * Reexports @noble/secp256k1's randombytes\n * Generates bytes with random bytes of given length\n * @param bytesLength an optional bytes length, default `32` bytes\n * @return {Uint8Array} random bytes\n */\nexport const randomBytes = (bytesLength: number = 32): Uint8Array => utils.randomBytes(bytesLength);\n\n/** Optional function to generate cryptographically secure random bytes */\nexport type GetRandomBytes = (count: number) => Uint8Array;\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,kBAAkB;AAQxC,OAAO,MAAMC,WAAW,GAAG,SAAAA,CAAA;EAAA,IAACC,WAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAsB,EAAE;EAAA,OAAiBH,KAAK,CAACC,WAAW,CAACC,WAAW,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}