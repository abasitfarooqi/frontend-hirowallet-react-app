{"ast":null,"code":"import { ClarityType } from '../constants';\nconst trueCV = () => ({\n  type: ClarityType.BoolTrue\n});\nconst falseCV = () => ({\n  type: ClarityType.BoolFalse\n});\nconst boolCV = bool => bool ? trueCV() : falseCV();\nexport { boolCV, trueCV, falseCV };","map":{"version":3,"names":["ClarityType","trueCV","type","BoolTrue","falseCV","BoolFalse","boolCV","bool"],"sources":["C:\\Users\\abasi\\Desktop\\web3-apps\\react-cra\\node_modules\\@stacks\\transactions\\src\\clarity\\types\\booleanCV.ts"],"sourcesContent":["import { ClarityType } from '../constants';\n\ntype BooleanCV = TrueCV | FalseCV;\n\ninterface TrueCV {\n  type: ClarityType.BoolTrue;\n}\n\ninterface FalseCV {\n  type: ClarityType.BoolFalse;\n}\n\n/**\n * Converts true to BooleanCV clarity type\n *\n * @returns {BooleanCV} returns instance of type BooleanCV\n *\n * @example\n * ```\n *  import { trueCV } from '@stacks/transactions';\n *\n *  const trueCV = trueCV();\n *  // { type: 3 }\n * ```\n *\n * @see\n * {@link https://github.com/hirosystems/stacks.js/blob/master/packages/transactions/tests/clarity.test.ts | clarity test cases for more examples}\n */\nconst trueCV = (): BooleanCV => ({ type: ClarityType.BoolTrue });\n\n/**\n * Converts false to BooleanCV clarity type\n *\n * @returns {BooleanCV} returns instance of type BooleanCV\n *\n * @example\n * ```\n *  import { falseCV } from '@stacks/transactions';\n *\n *  const falseCV = falseCV();\n *  // { type: 4 }\n * ```\n *\n * @see\n * {@link https://github.com/hirosystems/stacks.js/blob/master/packages/transactions/tests/clarity.test.ts | clarity test cases for more examples}\n */\nconst falseCV = (): BooleanCV => ({ type: ClarityType.BoolFalse });\n\n/**\n * Converts a boolean to BooleanCV clarity type\n *\n * @returns {BooleanCV} returns instance of type BooleanCV\n *\n * @example\n * ```\n *  import { boolCV } from '@stacks/transactions';\n *\n *  const boolCV = boolCV(false);\n *  // { type: 4 }\n * ```\n *\n * @see\n * {@link https://github.com/hirosystems/stacks.js/blob/master/packages/transactions/tests/clarity.test.ts | clarity test cases for more examples}\n */\nconst boolCV = (bool: boolean) => (bool ? trueCV() : falseCV());\n\nexport { BooleanCV, TrueCV, FalseCV, boolCV, trueCV, falseCV };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,cAAc;AA4B1C,MAAMC,MAAM,GAAGA,CAAA,MAAkB;EAAEC,IAAI,EAAEF,WAAW,CAACG;AAAQ,CAAE,CAAC;AAkBhE,MAAMC,OAAO,GAAGA,CAAA,MAAkB;EAAEF,IAAI,EAAEF,WAAW,CAACK;AAAS,CAAE,CAAC;AAkBlE,MAAMC,MAAM,GAAIC,IAAa,IAAMA,IAAI,GAAGN,MAAM,EAAE,GAAGG,OAAO,EAAG;AAE/D,SAAqCE,MAAM,EAAEL,MAAM,EAAEG,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}