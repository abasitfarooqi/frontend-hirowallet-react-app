{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{Link}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Record=props=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:props.record.name}),/*#__PURE__*/_jsx(\"td\",{children:props.record.position}),/*#__PURE__*/_jsx(\"td\",{children:props.record.level}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(Link,{className:\"btn btn-link\",to:`/edit/${props.record._id}`,children:\"Edit\"}),\" |\",/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-link\",onClick:()=>{props.deleteRecord(props.record._id);},children:\"Delete\"})]})]});export default function RecordList(){const[records,setRecords]=useState([]);// This method fetches the records from the database.\nuseEffect(()=>{async function getRecords(){const response=await fetch(`http://localhost:5050/record/`);if(!response.ok){const message=`An error occurred: ${response.statusText}`;window.alert(message);return;}const records=await response.json();setRecords(records);}getRecords();return;},[records.length]);// This method will delete a record\nasync function deleteRecord(id){await fetch(`http://localhost:5050/record/${id}`,{method:\"DELETE\"});const newRecords=records.filter(el=>el._id!==id);setRecords(newRecords);}// This method will map out the records on the table\nfunction recordList(){return records.map(record=>{return/*#__PURE__*/_jsx(Record,{record:record,deleteRecord:()=>deleteRecord(record._id)},record._id);});}// This following section will display the table with the records of individuals.\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Record List\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"table table-striped\",style:{marginTop:20},children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Position\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Level\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Action\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:recordList()})]})]});}","map":{"version":3,"names":["React","useEffect","useState","Link","jsx","_jsx","jsxs","_jsxs","Record","props","children","record","name","position","level","className","to","_id","onClick","deleteRecord","RecordList","records","setRecords","getRecords","response","fetch","ok","message","statusText","window","alert","json","length","id","method","newRecords","filter","el","recordList","map","style","marginTop"],"sources":["C:/Users/abasi/Desktop/web3-apps/react-cra/src/components/recordList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n \r\nconst Record = (props) => (\r\n <tr>\r\n   <td>{props.record.name}</td>\r\n   <td>{props.record.position}</td>\r\n   <td>{props.record.level}</td>\r\n   <td>\r\n     <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\r\n     <button className=\"btn btn-link\"\r\n       onClick={() => {\r\n         props.deleteRecord(props.record._id);\r\n       }}\r\n     >\r\n       Delete\r\n     </button>\r\n   </td>\r\n </tr>\r\n);\r\n \r\nexport default function RecordList() {\r\n const [records, setRecords] = useState([]);\r\n \r\n // This method fetches the records from the database.\r\n useEffect(() => {\r\n   async function getRecords() {\r\n     const response = await fetch(`http://localhost:5050/record/`);\r\n \r\n     if (!response.ok) {\r\n       const message = `An error occurred: ${response.statusText}`;\r\n       window.alert(message);\r\n       return;\r\n     }\r\n \r\n     const records = await response.json();\r\n     setRecords(records);\r\n   }\r\n \r\n   getRecords();\r\n \r\n   return;\r\n }, [records.length]);\r\n \r\n // This method will delete a record\r\n async function deleteRecord(id) {\r\n   await fetch(`http://localhost:5050/record/${id}`, {\r\n     method: \"DELETE\"\r\n   });\r\n \r\n   const newRecords = records.filter((el) => el._id !== id);\r\n   setRecords(newRecords);\r\n }\r\n \r\n // This method will map out the records on the table\r\n function recordList() {\r\n   return records.map((record) => {\r\n     return (\r\n       <Record\r\n         record={record}\r\n         deleteRecord={() => deleteRecord(record._id)}\r\n         key={record._id}\r\n       />\r\n     );\r\n   });\r\n }\r\n \r\n // This following section will display the table with the records of individuals.\r\n return (\r\n   <div>\r\n     <h3>Record List</h3>\r\n     <table className=\"table table-striped\" style={{ marginTop: 20 }}>\r\n       <thead>\r\n         <tr>\r\n           <th>Name</th>\r\n           <th>Position</th>\r\n           <th>Level</th>\r\n           <th>Action</th>\r\n         </tr>\r\n       </thead>\r\n       <tbody>{recordList()}</tbody>\r\n     </table>\r\n   </div>\r\n );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}